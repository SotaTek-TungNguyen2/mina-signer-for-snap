var m1=Object.create;var Et=Object.defineProperty;var h1=Object.getOwnPropertyDescriptor;var g1=Object.getOwnPropertyNames;var S1=Object.getPrototypeOf,b1=Object.prototype.hasOwnProperty;var be=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports);var k1=(e,t,n,r)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of g1(t))!b1.call(e,i)&&i!==n&&Et(e,i,{get:()=>t[i],enumerable:!(r=h1(t,i))||r.enumerable});return e};var Xe=(e,t,n)=>(n=e!=null?m1(S1(e)):{},k1(t||!e||!e.__esModule?Et(n,"default",{value:e,enumerable:!0}):n,e));var Nt=be((exports,module)=>{(function(){"use strict";var ERROR="input is invalid type",WINDOW=typeof window=="object",root=WINDOW?window:{};root.JS_SHA256_NO_WINDOW&&(WINDOW=!1);var WEB_WORKER=!WINDOW&&typeof self=="object",NODE_JS=!root.JS_SHA256_NO_NODE_JS&&typeof process=="object"&&process.versions&&process.versions.node;NODE_JS?root=global:WEB_WORKER&&(root=self);var COMMON_JS=!root.JS_SHA256_NO_COMMON_JS&&typeof module=="object"&&module.exports,AMD=typeof define=="function"&&define.amd,ARRAY_BUFFER=!root.JS_SHA256_NO_ARRAY_BUFFER&&typeof ArrayBuffer<"u",HEX_CHARS="0123456789abcdef".split(""),EXTRA=[-2147483648,8388608,32768,128],SHIFT=[24,16,8,0],K=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],OUTPUT_TYPES=["hex","array","digest","arrayBuffer"],blocks=[];(root.JS_SHA256_NO_NODE_JS||!Array.isArray)&&(Array.isArray=function(e){return Object.prototype.toString.call(e)==="[object Array]"}),ARRAY_BUFFER&&(root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW||!ArrayBuffer.isView)&&(ArrayBuffer.isView=function(e){return typeof e=="object"&&e.buffer&&e.buffer.constructor===ArrayBuffer});var createOutputMethod=function(e,t){return function(n){return new Sha256(t,!0).update(n)[e]()}},createMethod=function(e){var t=createOutputMethod("hex",e);NODE_JS&&(t=nodeWrap(t,e)),t.create=function(){return new Sha256(e)},t.update=function(i){return t.create().update(i)};for(var n=0;n<OUTPUT_TYPES.length;++n){var r=OUTPUT_TYPES[n];t[r]=createOutputMethod(r,e)}return t},nodeWrap=function(method,is224){var crypto=eval("require('crypto')"),Buffer=eval("require('buffer').Buffer"),algorithm=is224?"sha224":"sha256",nodeMethod=function(e){if(typeof e=="string")return crypto.createHash(algorithm).update(e,"utf8").digest("hex");if(e==null)throw new Error(ERROR);return e.constructor===ArrayBuffer&&(e=new Uint8Array(e)),Array.isArray(e)||ArrayBuffer.isView(e)||e.constructor===Buffer?crypto.createHash(algorithm).update(new Buffer(e)).digest("hex"):method(e)};return nodeMethod},createHmacOutputMethod=function(e,t){return function(n,r){return new HmacSha256(n,t,!0).update(r)[e]()}},createHmacMethod=function(e){var t=createHmacOutputMethod("hex",e);t.create=function(i){return new HmacSha256(i,e)},t.update=function(i,o){return t.create(i).update(o)};for(var n=0;n<OUTPUT_TYPES.length;++n){var r=OUTPUT_TYPES[n];t[r]=createHmacOutputMethod(r,e)}return t};function Sha256(e,t){t?(blocks[0]=blocks[16]=blocks[1]=blocks[2]=blocks[3]=blocks[4]=blocks[5]=blocks[6]=blocks[7]=blocks[8]=blocks[9]=blocks[10]=blocks[11]=blocks[12]=blocks[13]=blocks[14]=blocks[15]=0,this.blocks=blocks):this.blocks=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],e?(this.h0=3238371032,this.h1=914150663,this.h2=812702999,this.h3=4144912697,this.h4=4290775857,this.h5=1750603025,this.h6=1694076839,this.h7=3204075428):(this.h0=1779033703,this.h1=3144134277,this.h2=1013904242,this.h3=2773480762,this.h4=1359893119,this.h5=2600822924,this.h6=528734635,this.h7=1541459225),this.block=this.start=this.bytes=this.hBytes=0,this.finalized=this.hashed=!1,this.first=!0,this.is224=e}Sha256.prototype.update=function(e){if(!this.finalized){var t,n=typeof e;if(n!=="string"){if(n==="object"){if(e===null)throw new Error(ERROR);if(ARRAY_BUFFER&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!Array.isArray(e)&&(!ARRAY_BUFFER||!ArrayBuffer.isView(e)))throw new Error(ERROR)}else throw new Error(ERROR);t=!0}for(var r,i=0,o,l=e.length,a=this.blocks;i<l;){if(this.hashed&&(this.hashed=!1,a[0]=this.block,a[16]=a[1]=a[2]=a[3]=a[4]=a[5]=a[6]=a[7]=a[8]=a[9]=a[10]=a[11]=a[12]=a[13]=a[14]=a[15]=0),t)for(o=this.start;i<l&&o<64;++i)a[o>>2]|=e[i]<<SHIFT[o++&3];else for(o=this.start;i<l&&o<64;++i)r=e.charCodeAt(i),r<128?a[o>>2]|=r<<SHIFT[o++&3]:r<2048?(a[o>>2]|=(192|r>>6)<<SHIFT[o++&3],a[o>>2]|=(128|r&63)<<SHIFT[o++&3]):r<55296||r>=57344?(a[o>>2]|=(224|r>>12)<<SHIFT[o++&3],a[o>>2]|=(128|r>>6&63)<<SHIFT[o++&3],a[o>>2]|=(128|r&63)<<SHIFT[o++&3]):(r=65536+((r&1023)<<10|e.charCodeAt(++i)&1023),a[o>>2]|=(240|r>>18)<<SHIFT[o++&3],a[o>>2]|=(128|r>>12&63)<<SHIFT[o++&3],a[o>>2]|=(128|r>>6&63)<<SHIFT[o++&3],a[o>>2]|=(128|r&63)<<SHIFT[o++&3]);this.lastByteIndex=o,this.bytes+=o-this.start,o>=64?(this.block=a[16],this.start=o-64,this.hash(),this.hashed=!0):this.start=o}return this.bytes>4294967295&&(this.hBytes+=this.bytes/4294967296<<0,this.bytes=this.bytes%4294967296),this}},Sha256.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var e=this.blocks,t=this.lastByteIndex;e[16]=this.block,e[t>>2]|=EXTRA[t&3],this.block=e[16],t>=56&&(this.hashed||this.hash(),e[0]=this.block,e[16]=e[1]=e[2]=e[3]=e[4]=e[5]=e[6]=e[7]=e[8]=e[9]=e[10]=e[11]=e[12]=e[13]=e[14]=e[15]=0),e[14]=this.hBytes<<3|this.bytes>>>29,e[15]=this.bytes<<3,this.hash()}},Sha256.prototype.hash=function(){var e=this.h0,t=this.h1,n=this.h2,r=this.h3,i=this.h4,o=this.h5,l=this.h6,a=this.h7,u=this.blocks,m,y,S,k,h,I,s,g,p,f,c;for(m=16;m<64;++m)h=u[m-15],y=(h>>>7|h<<25)^(h>>>18|h<<14)^h>>>3,h=u[m-2],S=(h>>>17|h<<15)^(h>>>19|h<<13)^h>>>10,u[m]=u[m-16]+y+u[m-7]+S<<0;for(c=t&n,m=0;m<64;m+=4)this.first?(this.is224?(g=300032,h=u[0]-1413257819,a=h-150054599<<0,r=h+24177077<<0):(g=704751109,h=u[0]-210244248,a=h-1521486534<<0,r=h+143694565<<0),this.first=!1):(y=(e>>>2|e<<30)^(e>>>13|e<<19)^(e>>>22|e<<10),S=(i>>>6|i<<26)^(i>>>11|i<<21)^(i>>>25|i<<7),g=e&t,k=g^e&n^c,s=i&o^~i&l,h=a+S+s+K[m]+u[m],I=y+k,a=r+h<<0,r=h+I<<0),y=(r>>>2|r<<30)^(r>>>13|r<<19)^(r>>>22|r<<10),S=(a>>>6|a<<26)^(a>>>11|a<<21)^(a>>>25|a<<7),p=r&e,k=p^r&t^g,s=a&i^~a&o,h=l+S+s+K[m+1]+u[m+1],I=y+k,l=n+h<<0,n=h+I<<0,y=(n>>>2|n<<30)^(n>>>13|n<<19)^(n>>>22|n<<10),S=(l>>>6|l<<26)^(l>>>11|l<<21)^(l>>>25|l<<7),f=n&r,k=f^n&e^p,s=l&a^~l&i,h=o+S+s+K[m+2]+u[m+2],I=y+k,o=t+h<<0,t=h+I<<0,y=(t>>>2|t<<30)^(t>>>13|t<<19)^(t>>>22|t<<10),S=(o>>>6|o<<26)^(o>>>11|o<<21)^(o>>>25|o<<7),c=t&n,k=c^t&r^f,s=o&l^~o&a,h=i+S+s+K[m+3]+u[m+3],I=y+k,i=e+h<<0,e=h+I<<0;this.h0=this.h0+e<<0,this.h1=this.h1+t<<0,this.h2=this.h2+n<<0,this.h3=this.h3+r<<0,this.h4=this.h4+i<<0,this.h5=this.h5+o<<0,this.h6=this.h6+l<<0,this.h7=this.h7+a<<0},Sha256.prototype.hex=function(){this.finalize();var e=this.h0,t=this.h1,n=this.h2,r=this.h3,i=this.h4,o=this.h5,l=this.h6,a=this.h7,u=HEX_CHARS[e>>28&15]+HEX_CHARS[e>>24&15]+HEX_CHARS[e>>20&15]+HEX_CHARS[e>>16&15]+HEX_CHARS[e>>12&15]+HEX_CHARS[e>>8&15]+HEX_CHARS[e>>4&15]+HEX_CHARS[e&15]+HEX_CHARS[t>>28&15]+HEX_CHARS[t>>24&15]+HEX_CHARS[t>>20&15]+HEX_CHARS[t>>16&15]+HEX_CHARS[t>>12&15]+HEX_CHARS[t>>8&15]+HEX_CHARS[t>>4&15]+HEX_CHARS[t&15]+HEX_CHARS[n>>28&15]+HEX_CHARS[n>>24&15]+HEX_CHARS[n>>20&15]+HEX_CHARS[n>>16&15]+HEX_CHARS[n>>12&15]+HEX_CHARS[n>>8&15]+HEX_CHARS[n>>4&15]+HEX_CHARS[n&15]+HEX_CHARS[r>>28&15]+HEX_CHARS[r>>24&15]+HEX_CHARS[r>>20&15]+HEX_CHARS[r>>16&15]+HEX_CHARS[r>>12&15]+HEX_CHARS[r>>8&15]+HEX_CHARS[r>>4&15]+HEX_CHARS[r&15]+HEX_CHARS[i>>28&15]+HEX_CHARS[i>>24&15]+HEX_CHARS[i>>20&15]+HEX_CHARS[i>>16&15]+HEX_CHARS[i>>12&15]+HEX_CHARS[i>>8&15]+HEX_CHARS[i>>4&15]+HEX_CHARS[i&15]+HEX_CHARS[o>>28&15]+HEX_CHARS[o>>24&15]+HEX_CHARS[o>>20&15]+HEX_CHARS[o>>16&15]+HEX_CHARS[o>>12&15]+HEX_CHARS[o>>8&15]+HEX_CHARS[o>>4&15]+HEX_CHARS[o&15]+HEX_CHARS[l>>28&15]+HEX_CHARS[l>>24&15]+HEX_CHARS[l>>20&15]+HEX_CHARS[l>>16&15]+HEX_CHARS[l>>12&15]+HEX_CHARS[l>>8&15]+HEX_CHARS[l>>4&15]+HEX_CHARS[l&15];return this.is224||(u+=HEX_CHARS[a>>28&15]+HEX_CHARS[a>>24&15]+HEX_CHARS[a>>20&15]+HEX_CHARS[a>>16&15]+HEX_CHARS[a>>12&15]+HEX_CHARS[a>>8&15]+HEX_CHARS[a>>4&15]+HEX_CHARS[a&15]),u},Sha256.prototype.toString=Sha256.prototype.hex,Sha256.prototype.digest=function(){this.finalize();var e=this.h0,t=this.h1,n=this.h2,r=this.h3,i=this.h4,o=this.h5,l=this.h6,a=this.h7,u=[e>>24&255,e>>16&255,e>>8&255,e&255,t>>24&255,t>>16&255,t>>8&255,t&255,n>>24&255,n>>16&255,n>>8&255,n&255,r>>24&255,r>>16&255,r>>8&255,r&255,i>>24&255,i>>16&255,i>>8&255,i&255,o>>24&255,o>>16&255,o>>8&255,o&255,l>>24&255,l>>16&255,l>>8&255,l&255];return this.is224||u.push(a>>24&255,a>>16&255,a>>8&255,a&255),u},Sha256.prototype.array=Sha256.prototype.digest,Sha256.prototype.arrayBuffer=function(){this.finalize();var e=new ArrayBuffer(this.is224?28:32),t=new DataView(e);return t.setUint32(0,this.h0),t.setUint32(4,this.h1),t.setUint32(8,this.h2),t.setUint32(12,this.h3),t.setUint32(16,this.h4),t.setUint32(20,this.h5),t.setUint32(24,this.h6),this.is224||t.setUint32(28,this.h7),e};function HmacSha256(e,t,n){var r,i=typeof e;if(i==="string"){var o=[],l=e.length,a=0,u;for(r=0;r<l;++r)u=e.charCodeAt(r),u<128?o[a++]=u:u<2048?(o[a++]=192|u>>6,o[a++]=128|u&63):u<55296||u>=57344?(o[a++]=224|u>>12,o[a++]=128|u>>6&63,o[a++]=128|u&63):(u=65536+((u&1023)<<10|e.charCodeAt(++r)&1023),o[a++]=240|u>>18,o[a++]=128|u>>12&63,o[a++]=128|u>>6&63,o[a++]=128|u&63);e=o}else if(i==="object"){if(e===null)throw new Error(ERROR);if(ARRAY_BUFFER&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!Array.isArray(e)&&(!ARRAY_BUFFER||!ArrayBuffer.isView(e)))throw new Error(ERROR)}else throw new Error(ERROR);e.length>64&&(e=new Sha256(t,!0).update(e).array());var m=[],y=[];for(r=0;r<64;++r){var S=e[r]||0;m[r]=92^S,y[r]=54^S}Sha256.call(this,t,n),this.update(y),this.oKeyPad=m,this.inner=!0,this.sharedMemory=n}HmacSha256.prototype=new Sha256,HmacSha256.prototype.finalize=function(){if(Sha256.prototype.finalize.call(this),this.inner){this.inner=!1;var e=this.array();Sha256.call(this,this.is224,this.sharedMemory),this.update(this.oKeyPad),this.update(e),Sha256.prototype.finalize.call(this)}};var exports=createMethod();exports.sha256=exports,exports.sha224=createMethod(!0),exports.sha256.hmac=createHmacMethod(),exports.sha224.hmac=createHmacMethod(!0),COMMON_JS?module.exports=exports:(root.sha256=exports.sha256,root.sha224=exports.sha224,AMD&&define(function(){return exports}))})()});var dt=be((p3,d0)=>{var ln="Input must be an string, Buffer or Uint8Array";function an(e){let t;if(e instanceof Uint8Array)t=e;else if(typeof e=="string")t=new TextEncoder().encode(e);else throw new Error(ln);return t}function sn(e){return Array.prototype.map.call(e,function(t){return(t<16?"0":"")+t.toString(16)}).join("")}function Le(e){return(4294967296+e).toString(16).substring(1)}function un(e,t,n){let r=`
`+e+" = ";for(let i=0;i<t.length;i+=2){if(n===32)r+=Le(t[i]).toUpperCase(),r+=" ",r+=Le(t[i+1]).toUpperCase();else if(n===64)r+=Le(t[i+1]).toUpperCase(),r+=Le(t[i]).toUpperCase();else throw new Error("Invalid size "+n);i%6===4?r+=`
`+new Array(e.length+4).join(" "):i<t.length-2&&(r+=" ")}console.log(r)}function cn(e,t,n){let r=new Date().getTime(),i=new Uint8Array(t);for(let l=0;l<t;l++)i[l]=l%256;let o=new Date().getTime();console.log("Generated random input in "+(o-r)+"ms"),r=o;for(let l=0;l<n;l++){let a=e(i),u=new Date().getTime(),m=u-r;r=u,console.log("Hashed in "+m+"ms: "+a.substring(0,20)+"..."),console.log(Math.round(t/(1<<20)/(m/1e3)*100)/100+" MB PER SECOND")}}d0.exports={normalizeInput:an,toHex:sn,debugPrint:un,testSpeed:cn}});var v0=be((f3,x0)=>{var Ve=dt();function qe(e,t,n){let r=e[t]+e[n],i=e[t+1]+e[n+1];r>=4294967296&&i++,e[t]=r,e[t+1]=i}function y0(e,t,n,r){let i=e[t]+n;n<0&&(i+=4294967296);let o=e[t+1]+r;i>=4294967296&&o++,e[t]=i,e[t+1]=o}function m0(e,t){return e[t]^e[t+1]<<8^e[t+2]<<16^e[t+3]<<24}function le(e,t,n,r,i,o){let l=Ie[i],a=Ie[i+1],u=Ie[o],m=Ie[o+1];qe(E,e,t),y0(E,e,l,a);let y=E[r]^E[e],S=E[r+1]^E[e+1];E[r]=S,E[r+1]=y,qe(E,n,r),y=E[t]^E[n],S=E[t+1]^E[n+1],E[t]=y>>>24^S<<8,E[t+1]=S>>>24^y<<8,qe(E,e,t),y0(E,e,u,m),y=E[r]^E[e],S=E[r+1]^E[e+1],E[r]=y>>>16^S<<16,E[r+1]=S>>>16^y<<16,qe(E,n,r),y=E[t]^E[n],S=E[t+1]^E[n+1],E[t]=S>>>31^y<<1,E[t+1]=y>>>31^S<<1}var h0=new Uint32Array([4089235720,1779033703,2227873595,3144134277,4271175723,1013904242,1595750129,2773480762,2917565137,1359893119,725511199,2600822924,4215389547,528734635,327033209,1541459225]),pn=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3],L=new Uint8Array(pn.map(function(e){return e*2})),E=new Uint32Array(32),Ie=new Uint32Array(32);function g0(e,t){let n=0;for(n=0;n<16;n++)E[n]=e.h[n],E[n+16]=h0[n];for(E[24]=E[24]^e.t,E[25]=E[25]^e.t/4294967296,t&&(E[28]=~E[28],E[29]=~E[29]),n=0;n<32;n++)Ie[n]=m0(e.b,4*n);for(n=0;n<12;n++)le(0,8,16,24,L[n*16+0],L[n*16+1]),le(2,10,18,26,L[n*16+2],L[n*16+3]),le(4,12,20,28,L[n*16+4],L[n*16+5]),le(6,14,22,30,L[n*16+6],L[n*16+7]),le(0,10,20,30,L[n*16+8],L[n*16+9]),le(2,12,22,24,L[n*16+10],L[n*16+11]),le(4,14,16,26,L[n*16+12],L[n*16+13]),le(6,8,18,28,L[n*16+14],L[n*16+15]);for(n=0;n<16;n++)e.h[n]=e.h[n]^E[n]^E[n+16]}var ae=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);function S0(e,t,n,r){if(e===0||e>64)throw new Error("Illegal output length, expected 0 < length <= 64");if(t&&t.length>64)throw new Error("Illegal key, expected Uint8Array with 0 < length <= 64");if(n&&n.length!==16)throw new Error("Illegal salt, expected Uint8Array with length is 16");if(r&&r.length!==16)throw new Error("Illegal personal, expected Uint8Array with length is 16");let i={b:new Uint8Array(128),h:new Uint32Array(16),t:0,c:0,outlen:e};ae.fill(0),ae[0]=e,t&&(ae[1]=t.length),ae[2]=1,ae[3]=1,n&&ae.set(n,32),r&&ae.set(r,48);for(let o=0;o<16;o++)i.h[o]=h0[o]^m0(ae,o*4);return t&&(yt(i,t),i.c=128),i}function yt(e,t){for(let n=0;n<t.length;n++)e.c===128&&(e.t+=e.c,g0(e,!1),e.c=0),e.b[e.c++]=t[n]}function b0(e){for(e.t+=e.c;e.c<128;)e.b[e.c++]=0;g0(e,!0);let t=new Uint8Array(e.outlen);for(let n=0;n<e.outlen;n++)t[n]=e.h[n>>2]>>8*(n&3);return t}function k0(e,t,n,r,i){n=n||64,e=Ve.normalizeInput(e),r&&(r=Ve.normalizeInput(r)),i&&(i=Ve.normalizeInput(i));let o=S0(n,t,r,i);return yt(o,e),b0(o)}function fn(e,t,n,r,i){let o=k0(e,t,n,r,i);return Ve.toHex(o)}x0.exports={blake2b:k0,blake2bHex:fn,blake2bInit:S0,blake2bUpdate:yt,blake2bFinal:b0}});var U0=be((d3,T0)=>{var E0=dt();function dn(e,t){return e[t]^e[t+1]<<8^e[t+2]<<16^e[t+3]<<24}function se(e,t,n,r,i,o){B[e]=B[e]+B[t]+i,B[r]=De(B[r]^B[e],16),B[n]=B[n]+B[r],B[t]=De(B[t]^B[n],12),B[e]=B[e]+B[t]+o,B[r]=De(B[r]^B[e],8),B[n]=B[n]+B[r],B[t]=De(B[t]^B[n],7)}function De(e,t){return e>>>t^e<<32-t}var F0=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),q=new Uint8Array([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0]),B=new Uint32Array(16),M=new Uint32Array(16);function w0(e,t){let n=0;for(n=0;n<8;n++)B[n]=e.h[n],B[n+8]=F0[n];for(B[12]^=e.t,B[13]^=e.t/4294967296,t&&(B[14]=~B[14]),n=0;n<16;n++)M[n]=dn(e.b,4*n);for(n=0;n<10;n++)se(0,4,8,12,M[q[n*16+0]],M[q[n*16+1]]),se(1,5,9,13,M[q[n*16+2]],M[q[n*16+3]]),se(2,6,10,14,M[q[n*16+4]],M[q[n*16+5]]),se(3,7,11,15,M[q[n*16+6]],M[q[n*16+7]]),se(0,5,10,15,M[q[n*16+8]],M[q[n*16+9]]),se(1,6,11,12,M[q[n*16+10]],M[q[n*16+11]]),se(2,7,8,13,M[q[n*16+12]],M[q[n*16+13]]),se(3,4,9,14,M[q[n*16+14]],M[q[n*16+15]]);for(n=0;n<8;n++)e.h[n]^=B[n]^B[n+8]}function I0(e,t){if(!(e>0&&e<=32))throw new Error("Incorrect output length, should be in [1, 32]");let n=t?t.length:0;if(t&&!(n>0&&n<=32))throw new Error("Incorrect key length, should be in [1, 32]");let r={h:new Uint32Array(F0),b:new Uint8Array(64),c:0,t:0,outlen:e};return r.h[0]^=16842752^n<<8^e,n>0&&(mt(r,t),r.c=64),r}function mt(e,t){for(let n=0;n<t.length;n++)e.c===64&&(e.t+=e.c,w0(e,!1),e.c=0),e.b[e.c++]=t[n]}function A0(e){for(e.t+=e.c;e.c<64;)e.b[e.c++]=0;w0(e,!0);let t=new Uint8Array(e.outlen);for(let n=0;n<e.outlen;n++)t[n]=e.h[n>>2]>>8*(n&3)&255;return t}function B0(e,t,n){n=n||32,e=E0.normalizeInput(e);let r=I0(n,t);return mt(r,e),A0(r)}function yn(e,t,n){let r=B0(e,t,n);return E0.toHex(r)}T0.exports={blake2s:B0,blake2sHex:yn,blake2sInit:I0,blake2sUpdate:mt,blake2sFinal:A0}});var ht=be((y3,H0)=>{var Ae=v0(),Be=U0();H0.exports={blake2b:Ae.blake2b,blake2bHex:Ae.blake2bHex,blake2bInit:Ae.blake2bInit,blake2bUpdate:Ae.blake2bUpdate,blake2bFinal:Ae.blake2bFinal,blake2s:Be.blake2s,blake2sHex:Be.blake2sHex,blake2sInit:Be.blake2sInit,blake2sUpdate:Be.blake2sUpdate,blake2sFinal:Be.blake2sFinal}});function Q(e){let t=0n,n=0n;for(let r of e)t+=BigInt(r)<<n,n+=8n;return t}function Z(e,t){if(e<0n)throw Error(`bigIntToBytes: negative numbers are not supported, got ${e}`);let n=Array(t);for(let r=0;r<t;r++,e>>=8n)n[r]=Number(e&0xffn);if(e>0n)throw Error(`bigIntToBytes: input does not fit in ${t} bytes`);return n}function Ze(e,t,n){let r=x1(e,t);return v1(r,n)}function x1(e,t){if(t<=0n)throw Error("fromBase: base must be positive");let n=[];for(let o=t,l=1;l<e.length;o**=2n,l*=2)n.push(o);let r=n.length;e=e.concat(Array(2**r-e.length).fill(0n));for(let o=0;o<r;o++){let l=Array(e.length>>1),a=n[o];for(let u=0;u<l.length;u++)l[u]=e[2*u]+a*e[2*u+1];e=l}console.assert(e.length===1);let[i]=e;return i}function v1(e,t){if(t<=0n)throw Error("toBase: base must be positive");let n=[];for(let o=t;o<e;o**=2n)n.push(o);let r=[e],i=n.length;for(let o=0;o<i;o++){let l=Array(2*r.length),a=n[i-1-o];for(let u=0;u<r.length;u++){let m=r[u],y=m/a;l[2*u+1]=y,l[2*u]=m-y*a}r=l}for(;r[r.length-1]===0n;)r.pop();return r}function Ft(e){return crypto.getRandomValues(new Uint8Array(e))}var oe=0x40000000000000000000000000000000224698fc094cf91b992d30ed00000001n,Ge=0x40000000000000000000000000000000224698fc0994a8dd8c46eb2100000001n,We=0x40000000000000000000000000000000224698fc094cf91b992d30edn,E1=0x40000000000000000000000000000000224698fc0994a8dd8c46eb21n,ke=0x2bce74deac30ebda362120830561f81aea322bf2b7bb7584bdad6fabd87ea32fn,F1=0x2de6a9b8746d3f589e5c4dfd492ae26e9bb97ea3c106f049a70e2c1102b6d05fn;function v(e,t){return e=e%t,e<0?e+t:e}function ee(e,t,n){e=v(e,n);let r=1n;for(;t>0n;t>>=1n)t&1n&&(r=v(r*e,n)),e=v(e*e,n);return r}function He(e,t){if(e=v(e,t),e===0n)return;let n=t,r=0n,i=1n,o=1n,l=0n;for(;e!==0n;){let a=n/e,u=v(n,e),m=r-o*a,y=i-l*a;n=e,e=u,r=o,i=l,o=m,l=y}if(n===1n)return v(r,t)}var wt={};function w1(e,t,n,r){let i=32n,o=wt[t.toString()]||(wt[t.toString()]=ee(r,n,t)),l=ee(e,n,t),a=ee(e,(n+1n)/2n,t);for(;;){if(l===0n)return 0n;if(l===1n)return a;let u=0n,m=l;for(;m!==1n;)m=v(m*m,t),u=u+1n;if(u===i)return;let y=ee(o,1n<<i-u-1n,t);i=u,o=v(y*y,t),l=v(l*o,t),a=v(a*y,t)}}function I1(e,t){return e===0n?!0:ee(e,(t-1n)/2n,t)===1n}function A1(e){for(;;){let t=Ft(32);t[31]&=127;let n=Q(t);if(n<e)return n}}var W=It(oe,We,ke),xe=It(Ge,E1,F1);function It(e,t,n){return{modulus:e,sizeInBits:255,t,twoadicRoot:n,add(r,i){return v(r+i,e)},negate(r){return r===0n?0n:e-r},sub(r,i){return v(r-i,e)},mul(r,i){return v(r*i,e)},inverse(r){return He(r,e)},div(r,i){let o=He(i,e);if(o!==void 0)return v(r*o,e)},square(r){return v(r*r,e)},isSquare(r){return I1(r,e)},sqrt(r){return w1(r,e,t,n)},power(r,i){return ee(r,i,e)},dot(r,i){let o=0n,l=r.length;for(let a=0;a<l;a++)o+=r[a]*i[a];return v(o,e)},equal(r,i){return v(r-i,e)===0n},isEven(r){return!(r&1n)},random(){return A1(e)},fromNumber(r){return v(BigInt(r),e)},fromBigint(r){return v(r,e)}}}var B1=!1;B1&&T1();function T1(){console.assert(We*(1n<<32n)+1n===oe);let t=ee(5n,We,oe);console.assert(t===ke);let n=ee(ke,1n<<32n,oe),r=ee(ke,1n<<31n,oe);console.assert(n===1n),console.assert(r+1n===oe),console.assert(!W.isSquare(ke))}var U1={x:1n,y:12418654782883325593414442427049395787963493412651469444558597405572177144507n,z:1n},H1={x:1n,y:11426906929455361843568202299992114520848200991084027513389447476559454104162n,z:1n};function C1(){return{x:1n,y:1n,z:0n}}function At({x:e,y:t,z:n},r){return{x:e,y:t===0n?0n:r-t,z:n}}function $e(e,t,n){if(e.z===0n)return t;if(t.z===0n)return e;let r=e.x,i=e.y,o=e.z,l=t.x,a=t.y,u=t.z,m=v(o*o,n),y=v(u*u,n),S=v(r*y,n),k=v(l*m,n),h=v(i*u*y,n),I=v(a*o*m,n),s=k-S,g=v(s*s<<2n,n),p=v(s*g,n),f=2n*(I-h),c=v(S*g,n),d=v(f*f-p-2n*c,n),b=v(f*(c-d)-2n*h*p,n),x=v(((o+u)*(o+u)-m-y)*s,n);return{x:d,y:b,z:x}}function N1(e,t){if(e.z===0n)return e;let n=e.x,r=e.y,i=e.z,o=v(n*n,t),l=v(r*r,t),a=v(l*l,t),u=v(2n*((n+l)*(n+l)-o-a),t),m=3n*o,y=v(m*m,t),S=v(y-2n*u,t),k=v(m*(u-S)-8n*a,t),h=v(2n*r*i,t);return{x:S,y:k,z:h}}function P1(e,t,n){return $e(e,At(t,n),n)}function O1(e,t,n){let r=C1();for(;t>0n;)t&1n&&(r=$e(r,e,n)),e=N1(e,n),t>>=1n;return r}function R1(e,t){let n=e.z;if(n===0n)return{x:1n,y:1n,infinity:!0};if(n===1n)return{x:e.x,y:e.y,infinity:!1};{let r=He(n,t),i=v(r*r,t),o=v(e.x*i,t),l=v(e.y*r*i,t);return{x:o,y:l,infinity:!1}}}function Bt(e,t,n,r){return{one:t,endoBase:n,endoScalar:r,add(i,o){return $e(i,o,e)},negate(i){return At(i,e)},sub(i,o){return P1(i,o,e)},scale(i,o){return O1(i,o,e)},toAffine(i){return R1(i,e)},ofAffine({x:i,y:o}){return{x:i,y:o,z:1n}}}}var _1=Q(new Uint8Array([79,14,170,80,224,210,169,42,175,51,192,71,125,70,237,15,90,15,247,28,216,180,29,81,142,82,62,40,88,154,129,6])),M1=Q(new Uint8Array([71,181,1,2,47,210,127,123,210,199,159,209,41,13,39,5,80,78,85,168,35,42,85,211,142,69,50,181,124,53,51,45])),J1=Q(new Uint8Array([185,74,254,253,189,94,173,29,73,49,173,55,210,139,31,29,176,177,170,87,220,213,170,44,113,186,205,74,131,202,204,18])),K1=Q(new Uint8Array([177,241,85,175,64,24,157,97,46,117,212,193,126,82,89,18,166,240,8,227,39,75,226,174,113,173,193,215,167,101,126,57])),ie=Bt(oe,U1,M1,K1),Yn=Bt(Ge,H1,_1,J1);var H={event:"MinaZkappEvent******",events:"MinaZkappEvents*****",sequenceEvents:"MinaZkappSeqEvents**",body:"MinaZkappBody*******",accountUpdateCons:"MinaAcctUpdateCons**",accountUpdateNode:"MinaAcctUpdateNode**",zkappMemo:"MinaZkappMemo*******",signatureMainnet:"MinaSignatureMainnet",signatureTestnet:"CodaSignature*******",zkappUri:"MinaZkappUri********"},J={tokenIdKey:28,receiptChainHash:12,ledgerHash:5,epochSeed:13,stateHash:16,publicKey:203,userCommandMemo:20,privateKey:90,signature:154,transactionHash:18,signedCommandV1:19},Tt={mds:[["12035446894107573964500871153637039653510326950134440362813193268448863222019","25461374787957152039031444204194007219326765802730624564074257060397341542093","27667907157110496066452777015908813333407980290333709698851344970789663080149"],["4491931056866994439025447213644536587424785196363427220456343191847333476930","14743631939509747387607291926699970421064627808101543132147270746750887019919","9448400033389617131295304336481030167723486090288313334230651810071857784477"],["10525578725509990281643336361904863911009900817790387635342941550657754064843","27437632000253211280915908546961303399777448677029255413769125486614773776695","27566319851776897085443681456689352477426926500749993803132851225169606086988"]],roundConstants:[["21155079691556475130150866428468322463125560312786319980770950159250751855431","16883442198399350202652499677723930673110172289234921799701652810789093522349","17030687036425314703519085065002231920937594822150793091243263847382891822670"],["25216718237129482752721276445368692059997901880654047883630276346421457427360","9054264347380455706540423067244764093107767235485930776517975315876127782582","26439087121446593160953570192891907825526260324480347638727375735543609856888"],["15251000790817261169639394496851831733819930596125214313084182526610855787494","10861916012597714684433535077722887124099023163589869801449218212493070551767","18597653523270601187312528478986388028263730767495975370566527202946430104139"],["15831416454198644276563319006805490049460322229057756462580029181847589006611","15171856919255965617705854914448645702014039524159471542852132430360867202292","15488495958879593647482715143904752785889816789652405888927117106448507625751"],["19039802679983063488134304670998725949842655199289961967801223969839823940152","4720101937153217036737330058775388037616286510783561045464678919473230044408","10226318327254973427513859412126640040910264416718766418164893837597674300190"],["20878756131129218406920515859235137275859844638301967889441262030146031838819","7178475685651744631172532830973371642652029385893667810726019303466125436953","1996970955918516145107673266490486752153434673064635795711751450164177339618"],["15205545916434157464929420145756897321482314798910153575340430817222504672630","25660296961552699573824264215804279051322332899472350724416657386062327210698","13842611741937412200312851417353455040950878279339067816479233688850376089318"],["1383799642177300432144836486981606294838630135265094078921115713566691160459","1135532281155277588005319334542025976079676424839948500020664227027300010929","4384117336930380014868572224801371377488688194169758696438185377724744869360"],["21725577575710270071808882335900370909424604447083353471892004026180492193649","676128913284806802699862508051022306366147359505124346651466289788974059668","25186611339598418732666781049829183886812651492845008333418424746493100589207"],["10402240124664763733060094237696964473609580414190944671778761753887884341073","11918307118590866200687906627767559273324023585642003803337447146531313172441","16895677254395661024186292503536662354181715337630376909778003268311296637301"],["23818602699032741669874498456696325705498383130221297580399035778119213224810","4285193711150023248690088154344086684336247475445482883105661485741762600154","19133204443389422404056150665863951250222934590192266371578950735825153238612"],["5515589673266504033533906836494002702866463791762187140099560583198974233395","11830435563729472715615302060564876527985621376031612798386367965451821182352","7510711479224915247011074129666445216001563200717943545636462819681638560128"],["24694843201907722940091503626731830056550128225297370217610328578733387733444","27361655066973784653563425664091383058914302579694897188019422193564924110528","21606788186194534241166833954371013788633495786419718955480491478044413102713"],["19934060063390905409309407607814787335159021816537006003398035237707924006757","8495813630060004961768092461554180468161254914257386012937942498774724649553","27524960680529762202005330464726908693944660961000958842417927307941561848461"],["15178481650950399259757805400615635703086255035073919114667254549690862896985","16164780354695672259791105197274509251141405713012804937107314962551600380870","10529167793600778056702353412758954281652843049850979705476598375597148191979"],["721141070179074082553302896292167103755384741083338957818644728290501449040","22044408985956234023934090378372374883099115753118261312473550998188148912041","27068254103241989852888872162525066148367014691482601147536314217249046186315"],["3880429241956357176819112098792744584376727450211873998699580893624868748961","17387097125522937623262508065966749501583017524609697127088211568136333655623","6256814421247770895467770393029354017922744712896100913895513234184920631289"],["2942627347777337187690939671601251987500285937340386328746818861972711408579","24031654937764287280548628128490074801809101323243546313826173430897408945397","14401457902976567713827506689641442844921449636054278900045849050301331732143"],["20170632877385406450742199836933900257692624353889848352407590794211839130727","24056496193857444725324410428861722338174099794084586764867109123681727290181","11257913009612703357266904349759250619633397075667824800196659858304604714965"],["22228158921984425749199071461510152694025757871561406897041788037116931009246","9152163378317846541430311327336774331416267016980485920222768197583559318682","13906695403538884432896105059360907560653506400343268230130536740148070289175"],["7220714562509721437034241786731185291972496952091254931195414855962344025067","27608867305903811397208862801981345878179337369367554478205559689592889691927","13288465747219756218882697408422850918209170830515545272152965967042670763153"],["8251343892709140154567051772980662609566359215743613773155065627504813327653","22035238365102171608166944627493632660244312563934708756134297161332908879090","13560937766273321037807329177749403409731524715067067740487246745322577571823"],["21652518608959234550262559135285358020552897349934571164032339186996805408040","22479086963324173427634460342145551255011746993910136574926173581069603086891","13676501958531751140966255121288182631772843001727158043704693838707387130095"],["5680310394102577950568930199056707827608275306479994663197187031893244826674","25125360450906166639190392763071557410047335755341060350879819485506243289998","22659254028501616785029594492374243581602744364859762239504348429834224676676"],["23101411405087512171421838856759448177512679869882987631073569441496722536782","24149774013240355952057123660656464942409328637280437515964899830988178868108","5782097512368226173095183217893826020351125522160843964147125728530147423065"],["13540762114500083869920564649399977644344247485313990448129838910231204868111","20421637734328811337527547703833013277831804985438407401987624070721139913982","7742664118615900772129122541139124149525273579639574972380600206383923500701"],["1109643801053963021778418773196543643970146666329661268825691230294798976318","16580663920817053843121063692728699890952505074386761779275436996241901223840","14638514680222429058240285918830106208025229459346033470787111294847121792366"],["17080385857812672649489217965285727739557573467014392822992021264701563205891","26176268111736737558502775993925696791974738793095023824029827577569530708665","4382756253392449071896813428140986330161215829425086284611219278674857536001"],["13934033814940585315406666445960471293638427404971553891617533231178815348902","27054912732979753314774418228399230433963143177662848084045249524271046173121","28916070403698593376490976676534962592542013020010643734621202484860041243391"],["24820015636966360150164458094894587765384135259446295278101998130934963922381","7969535238488580655870884015145760954416088335296905520306227531221721881868","7690547696740080985104189563436871930607055124031711216224219523236060212249"],["9712576468091272384496248353414290908377825697488757134833205246106605867289","12148698031438398980683630141370402088785182722473169207262735228500190477924","14359657643133476969781351728574842164124292705609900285041476162075031948227"],["23563839965372067275137992801035780013422228997724286060975035719045352435470","4184634822776323233231956802962638484057536837393405750680645555481330909086","16249511905185772125762038789038193114431085603985079639889795722501216492487"],["11001863048692031559800673473526311616702863826063550559568315794438941516621","4702354107983530219070178410740869035350641284373933887080161024348425080464","23751680507533064238793742311430343910720206725883441625894258483004979501613"],["28670526516158451470169873496541739545860177757793329093045522432279094518766","3568312993091537758218792253361873752799472566055209125947589819564395417072","1819755756343439646550062754332039103654718693246396323207323333948654200950"],["5372129954699791301953948907349887257752247843844511069896766784624930478273","17512156688034945920605615850550150476471921176481039715733979181538491476080","25777105342317622165159064911913148785971147228777677435200128966844208883059"],["25350392006158741749134238306326265756085455157012701586003300872637887157982","20096724945283767296886159120145376967480397366990493578897615204296873954844","8063283381910110762785892100479219642751540456251198202214433355775540036851"],["4393613870462297385565277757207010824900723217720226130342463666351557475823","9874972555132910032057499689351411450892722671352476280351715757363137891038","23590926474329902351439438151596866311245682682435235170001347511997242904868"],["17723373371137275859467518615551278584842947963894791032296774955869958211070","2350345015303336966039836492267992193191479606566494799781846958620636621159","27755207882790211140683010581856487965587066971982625511152297537534623405016"],["6584607987789185408123601849106260907671314994378225066806060862710814193906","609759108847171587253578490536519506369136135254150754300671591987320319770","28435187585965602110074342250910608316032945187476441868666714022529803033083"],["16016664911651770663938916450245705908287192964254704641717751103464322455303","17551273293154696089066968171579395800922204266630874071186322718903959339163","20414195497994754529479032467015716938594722029047207834858832838081413050198"],["19773307918850685463180290966774465805537520595602496529624568184993487593855","24598603838812162820757838364185126333280131847747737533989799467867231166980","11040972566103463398651864390163813377135738019556270484707889323659789290225"],["5189242080957784038860188184443287562488963023922086723850863987437818393811","1435203288979376557721239239445613396009633263160237764653161500252258220144","13066591163578079667911016543985168493088721636164837520689376346534152547210"],["17345901407013599418148210465150865782628422047458024807490502489711252831342","22139633362249671900128029132387275539363684188353969065288495002671733200348","1061056418502836172283188490483332922126033656372467737207927075184389487061"],["10241738906190857416046229928455551829189196941239601756375665129874835232299","27808033332417845112292408673209999320983657696373938259351951416571545364415","18820154989873674261497645724903918046694142479240549687085662625471577737140"],["7983688435214640842673294735439196010654951226956101271763849527529940619307","17067928657801807648925755556866676899145460770352731818062909643149568271566","24472070825156236829515738091791182856425635433388202153358580534810244942762"],["25752201169361795911258625731016717414310986450004737514595241038036936283227","26041505376284666160132119888949817249574689146924196064963008712979256107535","23977050489096115210391718599021827780049209314283111721864956071820102846008"],["26678257097278788410676026718736087312816016749016738933942134600725962413805","10480026985951498884090911619636977502506079971893083605102044931823547311729","21126631300593007055117122830961273871167754554670317425822083333557535463396"],["1564862894215434177641156287699106659379648851457681469848362532131406827573","13247162472821152334486419054854847522301612781818744556576865965657773174584","8673615954922496961704442777870253767001276027366984739283715623634850885984"],["2794525076937490807476666942602262298677291735723129868457629508555429470085","4656175953888995612264371467596648522808911819700660048695373348629527757049","23221574237857660318443567292601561932489621919104226163978909845174616477329"],["1878392460078272317716114458784636517603142716091316893054365153068227117145","2370412714505757731457251173604396662292063533194555369091306667486647634097","17409784861870189930766639925394191888667317762328427589153989811980152373276"],["25869136641898166514111941708608048269584233242773814014385564101168774293194","11361209360311194794795494027949518465383235799633128250259863567683341091323","14913258820718821235077379851098720071902170702113538811112331615559409988569"],["12957012022018304419868287033513141736995211906682903915897515954290678373899","17128889547450684566010972445328859295804027707361763477802050112063630550300","23329219085372232771288306767242735245018143857623151155581182779769305489903"],["1607741027962933685476527275858938699728586794398382348454736018784568853937","2611953825405141009309433982109911976923326848135736099261873796908057448476","7372230383134982628913227482618052530364724821976589156840317933676130378411"],["20203606758501212620842735123770014952499754751430660463060696990317556818571","4678361398979174017885631008335559529633853759463947250620930343087749944307","27176462634198471376002287271754121925750749676999036165457559387195124025594"],["6361981813552614697928697527332318530502852015189048838072565811230204474643","13815234633287489023151647353581705241145927054858922281829444557905946323248","10888828634279127981352133512429657747610298502219125571406085952954136470354"]],fullRounds:55,partialRounds:0,hasInitialRoundConstant:!1,stateSize:3,rate:2,power:7},Ut={mds:[["5328350144166205084223774245058198666309664348635459768305312917086056785354","15214731724107930304595906373487084110291887262136882623959435918484004667388","22399519358931858664262538157042328690232277435337286643350379269028878354609"],["10086628405675314879458652402278736459294354590428582803795166650930540770072","17127968360683744052278857147989507037142007029142438136689352416106177192235","14207324749280135281015658576564097509614634975132487654324863824516044294735"],["3059104278162906687184746935153057867173086006783171716838577369156969739687","16755849208683706534025643823697988418063305979108082130624352443958404325985","16889774624482628108075965871448623911656600744832339664842346756371603433407"]],roundConstants:[["1346081094044643970582493287085428191977688221215786919106342366360741041016","10635969173348128974923358283368657934408577270968219574411363948927109531877","18431955373344919956072236142080066866861234899777299873162413437379924987003"],["5797044060651575840084283729791357462720161727701814038830889113712361837236","931288489507796144596974766082847744938192694315568692730730202141894005205","13659894470945121760517769979107966886673294523737498361566285362771110125394"],["6076231707445968054305995680347976771585015308155855387339303513025362636128","28822740034050339685362260108484262889265034407340240070058997651710236456303","23420266473857869790486107029614186913447272961845992963194006142267563993493"],["13753917374184785903125509246122783296344288469304898921025291716613575849357","22396739346703340038555577564698139382745239004673153148674304627904081092826","13064238335532551154986111986409392866270911640785653458047811526842088084911"],["23165923875642452719095776619341762858050322341374771345641255745672274104746","1876216571769482372914291210815859835162659440705283782713345335434924136736","25448252060136178247213604035267580231762596830634036926922217427938159849142"],["2161875315509206970842862195937323600322108268401381254431163181777726747153","19159855698625842998331760283165907305622417625829203038229273729196960321630","24828563875172432296791053766778475681869974948122169083176331088266823626561"],["15959479662608710141128458274961057999257961784282074767105536637788386907463","8006369581283017287449277389162056290714176164680299906116833200510117952858","18794336794618132129607701188430371953320538976527988886453665523008714542779"],["19408271715954593722501381885401160867835377473312521553027032015227895029571","13654747284005184272412579731446984220568337794941823533879059135026064413631","14094055032353750931629930778481002727722804310855727808905931659115939920989"],["13241818625838429282823260827177433104574315653706102174619924764342778921524","25709259239494174564705048436260891089407557689981668111890003079561388887725","26866626910239634723971078462134580196819809568632305020800296809092442642381"],["23886826350713085163238005260075062110062681905356997481925492650252417143049","16853602711255261520713463306790360324679500458440235992292027384928526778856","18444710386168488194610417945072711530390091945738595259171890487504771614189"],["16896789009769903615328691751424474161656500693270070895928499575572871141439","23842266984616972287898037872537536999393060934879414668030219493005225085992","24369698563802298585444760814856330583118549706483939267059237951238240608187"],["25360195173713628054110426524260405937218170863260484655473435413697869858790","1486437708678506228822038923353468635394979165769861487132708983207562337116","18653498960429911228442559598959970807723487073275324556015861725806677047150"],["18878179044241268037057256060083772636369783391816038647949347814518015576522","178715779905629247116805974152863592571182389085419970371289655361443016848","8381006794425876451998903949255801618132578446062133243427381291481465852184"],["4176946262813877719206528849579392120806054050640974718891398605746592169324","16376345520728802444699629729684297833862527190772376028981704525651968727081","8399065769082251057361366626601550736334213197703006866551331927128775757919"],["15435308585611812393531506745122614542196708285088622615406141986333182280857","4082259282787276939431186930090898350392871145699460879678141552997816391817","26348742719959309014730178326877937464605873211235784184917342950648457078699"],["9707631711734344681918469569872517425107158187591261754498805460753455298868","27910768846011709391567916011595957279088224137468948238696800459136335473132","20407239095656434708569263842372155762970847207558227886302782130015730063802"],["22726225412881182965250630589245572283256255052470345984553083359461473893802","12443967854426795490638709950679156338200426963050610832781263082981525248175","27102543658848146076219989119639465430524061997280788166887046421706499775415"],["14427224233985680214097547669945064793149553513421479297921556194475574770861","22917454832925781549840198815703114840452733537799472739275668965081704937832","3455076056123630366063931123762198941796412458154689469887583689725886013901"],["4513100023937785913596662867311227004762025658663076805918211014066645403017","18187619530784075723418065322038024507729605774832001333883311123910954334059","9447065431426150382325592560406989926365684509675374414068135115024495130938"],["3227816098015819796753427754968234889554095489076864339942014527747604603014","14798316759185072116520458171957899889489461918408669809912344751222514418582","23013904852315603905843158448056763116188801262838729536210355401378476650033"],["20979191509934291452182967564058656088941447895799901211038858159903580333267","20772973010251235271448378823573767262405703078344288856168565499702414379868","10105446427739226002497411811738001382334316505480517822035303561899927603685"],["11079074761356717003579108002319997196881121172538617046865136940931215263187","4693927775411489288330326150094711670434597808961717172753867514688725690438","18581720304902876944842830383273503265470859268712618325357902881821721540119"],["3065369948183164725765083504606321683481629263177690053939474679689088169185","18515622379147081456114962668688706121098539582467584736624699157043365677487","17563088600719312877716085528177751048248154461245613291986010180187238198006"],["26199746176994924146211004840756471702409132230831594954444947705902602287290","7576136600627345523051497639367002272003104458453478964661395239732811642605","20058687874612168338994287374025378897088936171250328231848098497610185784281"],["16894722532414195606958290526999761110785277556463400588047573469106594850228","13961730805696859614283621225672002906734926278118993580398533742874863598733","25256842011135514243352951950573936602906198374305137963222382546140030647211"],["18530360047537856737482157200091774590035773602620205695980247565433703032532","23014819965938599260086897799541446473887833964178378497976832161473586995397","27911426213258307990762460361663504655967992659180759140364181941291843542489"],["1067338118323302017358103178057182291035336430305886255160210378977812067042","17219092885519007424608854460610388434712113621163885775309496940189894433620","16432921127615937542183846559291144733339643093361323334499888895135356545408"],["28608851042959977114787048070153637607786033079364369200270218128830983558707","10121629780013165888398831090128011045011860641816380162950736555305748332191","2348036340843128746981122630521268144839343500596932561106759754644596320722"],["16619881370356823200358060093334065394764987467483650323706184068451904156452","2302436627861989749837563733434625231689351276818486757748445924305258835336","27514536540953539473280001431110316405453388911725550380123851609652679788049"],["9459277727420672604737117687200019308525004979918488827092207438664125039815","23425670740358068509956137586663046763224562225383386726193078231034380596217","7641885067011661443791509688937280323563328029517832788240965464798835873658"],["9579420382351699601929202663836555665702024548386778299996961509578687980280","18513671386572584282611234979588379470994484682444053600751415262497237017703","24923151431234706142737221165378041700050312199585085101919834422744926421604"],["21131320841803068139502705966375283830095161079635803028011171241658723560073","19208476595309656066589572658712717685014329237892885950958199953675225096566","24023185216737416080949689106968568821656545490748664446389634158498624398204"],["7510552996848634969347937904645640209946785877619890235458182993413526028718","3694415017252995094553868781762548289196990492336482360084813900937464847638","9219021070107873028263141554048987416559034633883158827414043929220388719352"],["5058327241234443421111591959922712922949620710493120384930391763032694640881","13148252221647574076185511663661016015859769210867362839817254885265598775418","15186790492457240277904880519227706403545816456632095870015828239411033220638"],["2775942914650502409705888572245750999561427024488403026572311267798009048466","6277965230841030155341171319927732572492215818164736949144854827643964384893","24144742149845235561087977558785057713814731737434473021812189457617252043745"],["25789129719327437503403457598813971826156253950521984610569937361506914183550","21500534320778995945845999974779950304491968082325255355181901574840373597824","17185359848218837018503091932245529880546896465437232425673134558221638601375"],["12253896579078110143384981818031883112606762215016553811786428215758384195713","12956658260778456372481429232709881794962204180363200699121804724437678625542","3023603786717368708677300377055384474816569333060487675635618249403832078921"],["4186492855716808019562789862833898284927736051002588766326482010810259565130","4263939782228419774639068267872291539552889472311225829898746091327730032923","24068843626280451423530509388397151179174104901782990365720205643492047328816"],["14564937827374621319716285527475223392664010281568256859627186463065876537730","28367596550218705971881480694115935470211319172596432472834880507822452927283","28712267437482356021504544448225827500268648754270274754623969882031853409874"],["4542596163006916397403529184431773692747461300288194722982487051249951403191","2530461821259252672899452671728393208543894014761816288817584587718369998371","12886393063011539390567049190923398676964700147222878509238966758839020897414"],["21593897590707514492037699253654745501762191795293908682495110982956631870528","13233005790593128135480716846773978578237145313006994631606474472023504621256","21621863098292803642478350494794106282518362577273973885587684567452726939909"],["26068620073001644720969640099644251616742620988609091568084348314770436291745","18248589586787935500122854210401321966459127818593446990365211078521058875685","21247134484403265289037859533347798468858819117600251067578809852124865474448"],["7947383127165915366383984718363902897504221803836013123394785749404572432524","22173041014621867335598230447618036223462011647696367239478182269973488867154","16773227734018849308448505860847939069870370055633571816925675705713088305139"],["10708707957340055662073314227607620808612686977606082605219160019699644826999","21249897193797038261479589555720746994050836195265348846222835266344091683000","12581195059139097540117398803363514148192715293133623516709277290477633379593"],["19779599816866992123290302397082614570282926215253589712189610064229996603178","21749216503901548676985371189807470207364320167486559936962401093285243029177","17600045923623503357380202389718735904174992978547372448837488832457719009224"],["2732872979548118117758016335601225525660858727422778256671975055129965858636","13703031005128062046175331918702218558750713240446179585947851411173844703597","28447710105386636841938034820015573492556750872924193415447818187228356409281"],["28539960355005748517007309210788803416171161412204526246799800716567376494244","21329318452221893900731030722137844458345358926323127858742388587761302609863","28135302149599894709369178097439582767613940517471323224020113411362601191873"],["24980774120400248734054527936006392540889095705961960837980443629260392758683","20339911045808632098936066397942175169549806052128535543540543556255197716643","7929293103930252545581851978492699598413941396422930641071359388697302362494"],["8911092207145893152276662096451247820054843777071569723455408545101628926203","19648860643145256523615441075182036100116634560394529500146405733687718224516","14635387208623683806428528837466762532853903031263830054986064902455379735903"],["11555212214346132926966321609673228184079851030522218543981385635403167028692","20896918157639814425520058178561910811657326967880217845710779511927814874973","4650158165912007049140499755153804318686705949436165235742106170124284287326"],["13880660273492757167295696447853232191657893303250187467329180558670697369810","8043529172463774320604378774840863923445982272478964686447801046272917236836","2134399296482715903442913099374581981696436050603410080564843555725771329441"],["27320952903412641133501507962185246982787769547770982814240701526492601978122","23417491374379751329394424924400186404791519133465537872457405970098902747611","17612427354278346772575179176139417348059847375297761006336024476146551185903"],["10710998507064742997612080847223278109404482930427999113323732519626499166548","14958094513415797513745395709487730603918953350067504982704138489305723550923","24096319595904213497633343966229498735553590589105811393277073274927955202995"],["17983724131200292654039765185049138356840415443160477259330748730019147254309","17598096800487588874709548646068838880468456205252324677357706597166777506441","27420647821110229619898200875848631488422182349567475956209153112306555222281"],["448538544835457571662601142415301047108854812427100562339376187510452313026","23494184556634922103535803143214434479598067155171780264810485708203176455201","22626342941879801989161990529511235538216563009907378573817996229389756621777"],["26128268137723417163973860961686381960826033145738852158792607959175787222856","20225791828042873305317281581105429726352058325970107209484198122707862156597","7538871133759632802857159609785118198934349221046986784429069814655215585732"],["26184554861259642274153262777073624024579929401668865520166966302070394487366","28755259264665180745537307265993667261709206143628938749669440804401623257679","11896066093033549470312328497237649508068258723531931099214795928200015717321"],["21657721599978732693249012287058163532690942515202465984736373311077240614059","9214914097169852704753116653702415951907628005986883140609006971322091003693","18710111680849814325169297240208687402588261569152088592693815711857504371037"],["6813635166770764528979084175325709935892248249948967889926276426090222296643","20546585456429436268067726231902751119458200511988152296570567167520382569278","20087466019194902429054761607398988292568594301671509779549344754172952693871"],["28185105286740691904534067831357491310995891986363455251895371651360605333143","10108348212894231193041286244259038275269464277821588425688314560368589986063","11433633215392393209829215018579238412423821563056156785641278458497271271546"],["27870881917195016999862550657996865268956893566432995492427618003637597051321","102309803677783876701097881491240456320211833502658383473112057006867019389","22844040227595875612525628393174357057929113317578127744718774517498324646590"],["18364790233947478619325319418813215212267974311771564959136180502266118026133","2480624341921718230432383518425561514824501138863702825916674641657321180841","16778939567530361665956758171503829349658551798564323167725356065198936433124"],["11947564511486966895926950599696532964589539443187518177489990556481125699966","3133187646540385483015602955087323554103587039123577645562801570574691666057","27704797101265438206569218421707753788081674727344603874614391656565567951541"],["13001484695584753475562184349533365512515447041450030471627087395341039487710","477322000667279478600757543806155989948171541982639893984064422067850617496","13913755821658634147813329813115566967428755223601185963529801459396673113438"],["16621869429023470107454028095846067937827722393398508604914831452950874033411","21755744236927410239079501831014076529931327263341620300431356747367343619046","26538666591151124505694487799121414506088199961481579132019627484065014831180"],["3066480818457008068617042549071052338581291837882909165666223566402713429090","16182268213934119294035309949459684472027705439038023775276926916166831108357","28907604876608422892474268478706783033050951245339691569015166507728369585190"],["27973960109508292680965426133498827831691369851701664449575719912259359998113","1456924360278399121996742356757866616312146358469991014696110099534285524446","8234248752911525485438611255163504976087091103090603316695312869292347668495"],["8716078950082339630026654067608811496722305720644485560320987802533380421009","19016744645809919602099479306503354923553336014593353020688463619133130053825","24379650661051444982012238084495990858827340608012118841005379796362233056432"],["2245379544097631382062919677963998259142792890502492881341386639439507471783","28788137434161061988371619554419440748189388934884757179010092973102292086583","7187000185648741287953633167647835668543536354944774631102766873251849991238"],["18319349500538500800225762827448369057030532278398270164660609327776487168142","2622932985948021877314529887962683530522545893985767148345336304947201715671","13805188629797792210337544360632964855143280581052079479249966961215582531026"],["27457600993464082637917106210690168172469473943609357897393615707457194410878","15448646156961779103834447043970817898237835202826003934642165760908058355399","9396792545729486882231669677795667529746274932273033601723318032992363022062"],["9927877141952679457141759789181418464292082444806533413864151258248124544859","23827901395971835838179844085051957393677906360196119690926757794561937573142","3273544693673216914876067527455588276979859627093391584406340272737391174619"],["19571510438350300564152393820251652609646082150148656806391655428002614034315","4458840243585913642400750597703353770666314833058197517675446022682775625834","6452218213610300363069953741424106105609715382419342511693148495219793324457"],["14558167930891460678441266912176752652821641543245953113671886345167213541771","10650967986920075561478528461783351160938460620955779955379459848889204404950","19990009778942542934049216419052172134625404062770188357110708518621145688588"],["26855242974447190235826233682457047761532515293146087151296725996543442567035","22785340043356532865086769889360674409753343398766563441587096485751538658065","28603049427449348335651629195385434188071937908693764500052489540779792538285"],["20545812864989828913452616721240947168977365844984763819184465128164378967167","23234068381345797209897730226956922073109641728569353961504167817770340037954","26031714567641615877877111172701145299483019910006153132858512509897185854695"],["9512221744061419790435674197238913998387834650389922233458121639503195504983","12587458000103271975978240683793268604398305885278203470492658961734100340536","9670291694005369437277651504604785512303147991710650505302465204429311229197"],["26995526763045548800439747262386290359229145489609341602564040676717570935439","23742712112104280264401317024221734961713400615669958343926511931219510484675","27931469778579449247589315744656633392873808631802461175539563849884447358271"],["20669006894143187877081688942720159738269397552445286314270368345994751825389","26891772301075275370472640177651637211280740381619976926886106618375467277414","28387986011980449959047232529988203397251084614417760995257355718700961696092"],["6579105010484741592730389416372694666279917604793318157514380025250233913402","11007035767869292700964744408562802781669930023548892567535397874932420229930","981148366863906885900456473323410468923514528856216824044152942069412627408"],["22213671088722307302576907504985884923571642958053627659840326928319445671280","1318836216310789598614608105109389429335273432455224127576823891011367206122","25586582796990779718352441955439394949194222626688223867952982491529809559257"],["4923739488579452777913681531125585976446366144127161879759262506690369040090","23505612338866210737103599484620591026802005128655081877133994175016351514827","323887003859465324514901860965142186539600668250760639664361851354147799637"],["10198923064967306784017949469108033682156920551672348936591491217255268794658","9593680688139131432883442351722730169325112619984238956948153423155998917175","27027988263960602112273050725720071355535922812577299127302015348825197871870"],["14419883951157390867695097127684346981136020111885301573583640959136319507752","5104414988075833278683649298543440897371415916271358703850262680431809374355","24739655595299332818980677669648719986462429574612913501586844601377825836782"],["28522818684103966731129743408029731246564480741348128436668680764518115102581","21520350704208288978690888796633940487888044365108767319141211249242880355961","17391005598311948834360476853940353239444383292422171321575043660157438608537"],["15367833944125677011173327826570204350687925236257190051755087781855930646142","21715073802090413714601069529558707101797361591183718695054701329871284436172","8994093285353831008525761670339342200997965950202092028313103110478252647618"],["8370824693889782161629525898408725452177580012023459750897244954935682978671","16123253540853556024347150096993154278773652905830608614979368087152152043083","3535380953353495025888433493640531836449699255364366295870140701379497967423"],["6954518484798178646508803478426114267143074508396663899281411171704702743829","28903134801897070276701950388422104654018369750191967384271618837091859516942","20872505363530172448468374920196608937030884647150175861507911076568784054834"],["6902861581703501105786795670676641959401710346423594578401934671029571262513","10124161387604183369443890585742198433184078889862870469507328332805848271064","10488004060799269337071647841224034919633445750252076195310163972966405029030"],["507704911991278613147490289466075160618843900088471236546244459176211783848","7252739745607302667257774481690407709040936359589867974787811552896597703097","23278073497974004442836030100920157527910770509761505828038443336325476654930"],["22766285055433137793164317120096790621982728188995759745859222009100808389090","23129058299483468195787339200845749049960038336751758017949899311636830205152","16665333681978951552434356320651834889869437822496200946959897681307959400425"],["12145699202182574939376505075528461451757079041659894988784442097333218352048","26340666275844437932755852805027863696219004039301187587209926587657008948704","19208771804191839410002226941825269105677187954811130189835856228258013753206"],["21957102494792377508237608216278079874536155315851198461024084071231867104453","6933367436450995525851693784691226222726503560893470094614235356287049091852","15707767379191450768747057313641112321773921923533732633534831270357733757271"],["27661963645951389261638591385668507557739541354225916772550248746235106571003","19699458096897937575096494582288688995241392471402204995195057374756282223421","902873385171181344315871113842580653512118892800584003934454469411716098791"],["17184835876565576154014372215369798779520343573944211203710896053325717110660","664657295519303589036289440053175741110032988007278988577620229144220576240","10803972669668998371638869508774217165881281885838503958226056357738500321396"],["2329846733754251453632375727999372856194157027336139087170310553870624325301","14139944357035048486675740400655356660678187875721949218090128899571575479791","18368148273419807418427674359327442879484531833435081951870369910704734685351"],["10480273665080572189328459165704340191901489646067580012574464138528963201459","21773636700078124500346009061678153597323236568110076029811348966753228682835","18184268307211429260956076021417309535471438696101133218049142374847151474905"],["25957533025669311312382992376854735734491934602484112256289764602447226406852","22223261506176684934865714490719116745135417403915426392159449667435294570739","22937309162832499167063076416585504361695925730111272512450449042837586253575"],["16956181785481598286719868503945127919581091625126206673934113115358441284347","8497782777197814773596870810881707148695901557289856910220737358078100998191","21135503731586600979470064722475007625236017670426339278983640892218291297054"],["17809297343844488723046665739910571149089769215421130894378638450427880983923","72435395972188389387093550708873189001876361107443937983754878061522372356","7511239878692099209014947248389283109997289411550315391143819429585903287870"]],fullRounds:63,partialRounds:0,hasInitialRoundConstant:!0,stateSize:3,rate:2,power:5};function D({toBytes:e,readBytes:t}){return{toBytes:e,readBytes:t,fromBytes(n){let[r,i]=t(n,0);if(i<n.length)throw Error("fromBytes: input bytes left over");return r}}}function G(e,t){return D({toBytes(n){let r=e.toBytes(n);return t!==void 0&&r.unshift(t),r},readBytes(n,r){return t!==void 0&&r++,e.readBytes(n,r)}})}function Ct({toBytes:e,readBytes:t},n){return D({toBytes:e,readBytes(r,i){let[o,l]=t(r,i);return n(o),[o,l]}})}function O(e,t){let n=t.map(i=>e[i]),r=z1(n);return D({toBytes(i){let o=t.map(l=>i[l]);return r.toBytes(o)},readBytes(i,o){let[l,a]=r.readBytes(i,o);return[Object.fromEntries(t.map((m,y)=>[m,l[y]])),a]}})}function z1(e){let t=e.length;return D({toBytes(n){let r=[];for(let i=0;i<t;i++){let o=e[i].toBytes(n[i]);r.push(...o)}return r},readBytes(n,r){let i=[];for(let o=0;o<t;o++){let[l,a]=e[o].readBytes(n,r);r=a,i.push(l)}return[i,r]}})}function ve(e){let t=Object.fromEntries(e.map(({type:n},r)=>[n,r]));return D({toBytes(n){let r=t[n.type],i=e[r];if("value"in i){let o=i.value;return[r,...o.toBytes(n.value)]}return[r]},readBytes(n,r){let i=n[r];r++;let o=e[i];if("value"in o){let[l,a]=o.value.readBytes(n,r);return[{type:o.type,value:l},a]}return[{type:o.type},r]}})}var et=D({toBytes(e){return[e.length,...Y(e)]},readBytes(e,t){let n=e[t++],r=t+n;return[String.fromCharCode(...e.slice(t,r)),r]}}),Ht=255,Ye=254,je=253,Qe=252,fe=D({toBytes(e){if(e>=0)return e<0x80n?Z(e,1):e<0x8000n?[Ye,...Z(e,2)]:e<2147483648?[je,...Z(e,4)]:[Qe,...Z(e,8)];{let t=1n<<64n;return e>=-0x80n?[Ht,...Z(t+e&0xffn,1)]:e>=-0x8000n?[Ye,...Z(t+e&0xffffn,2)]:e>=-2147483648?[je,...Z(t+e&0xffffffffn,4)]:[Qe,...Z(t+e,8)]}},readBytes(e,t){let n=e[t++];if(n<128)return[BigInt(n),t];let r={[Ht]:1,[Ye]:2,[je]:4,[Qe]:8}[n];if(r===void 0)throw Error("binable integer: invalid start byte");let i=t+r;return[L1(e.slice(t,i)),i]}});function L1(e){let t=e.length,r=e[t-1]>>7===1?255:0,i=e.concat(Array(8-t).fill(r)),o=Q(i);return o>=1n<<63n&&(o-=1n<<64n),o}function de(e,t){if(t.length>=e.sizeInBytes())throw Error("prefix too long");return e.fromBytes(Y(t))}function Ce([...e]){let t=[];for(;e.length>0;){let n=e.splice(0,8),r=0;for(let i=0;i<8;i++)n[i]&&(r|=1<<i);t.push(r)}return t}function ue(e){return e.map(t=>{let n=Array(8);for(let r=0;r<8;r++)n[r]=!!(t&1),t>>=1;return n}).flat()}function Ne(e,t){return{...e,toBits(n){return ue(e.toBytes(n)).slice(0,t)},fromBits(n){return e.fromBytes(Ce(n))},sizeInBytes(){return Math.ceil(t/8)},sizeInBits(){return t}}}function Y(e){return[...e].map((t,n)=>e.charCodeAt(n))}var tt=Xe(Nt(),1);var Pt="123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz".split(""),Ot={};Pt.forEach((e,t)=>{Ot[e]=t});function q1(e,t){let n=[t,...e],r=Rt(n),i=n.concat(r);return D1(i)}function V1(e,t){let n=X1(e),r=n.slice(-4),i=n.slice(0,-4),o=Rt(i);if(!Y1(r,o))throw Error("fromBase58Check: invalid checksum");if(i[0]!==t)throw Error(`fromBase58Check: input version byte ${t} does not match encoded version byte ${i[0]}`);return i.slice(1)}function D1(e){let t=0;for(;e[t]===0;)t++;let n=[...e].map(BigInt).reverse(),r=Ze(n,256n,58n).reverse();return r=Array(t).fill(0n).concat(r),r.map(i=>Pt[Number(i)]).join("")}function X1(e){let t=[...e].map(i=>{let o=Ot[i];if(o===void 0)throw Error("fromBase58: invalid character");return BigInt(o)}),n=0;for(;t[n]===0n;)n++;let r=Ze(t.reverse(),58n,256n).reverse();return r=Array(n).fill(0n).concat(r),r.map(Number)}function Rt(e){let t=tt.sha256.create();t.update(e);let n=tt.sha256.create();return n.update(t.array()),n.array().slice(0,4)}function j(e,t){return{toBase58(n){let r=e.toBytes(n);return q1(r,t)},fromBase58(n){let r=V1(n,t);return e.fromBytes(r)}}}function Pe(e,t){return{...e,...j(e,t)}}function Ee(e,t,n){return j(G(e,n),t)}var Z1=1,W1=1,G1=1,$1=1;function _t(e){let t=Ee(e,J.tokenIdKey),n=Ee(e,J.receiptChainHash,Z1),r=Ee(e,J.ledgerHash,W1),i=Ee(e,J.epochSeed,G1),o=Ee(e,J.stateHash,$1);return{TokenId:t,ReceiptChainHash:n,LedgerHash:r,EpochSeed:i,StateHash:o}}function Y1(e,t){if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}var Jt=W.sizeInBits,Kt=0x40000000000000000000000000000000224698fc094cf91b992d30ed00000000n,Mt=Re(0n,W.modulus,"Field"),Oe=Lt(new Set([0n,1n]),"Bool"),nt=Lt(new Set([1n,Kt]),"Sign"),F=ye(function(t){return v(BigInt(t),W.modulus)},{...me(Mt),...he(W.sizeInBits,Mt),...W}),C=ye(function(t){return BigInt(t)},{...me(Oe),...he(1,Oe),toInput(e){return{fields:[],packed:[[e,1]]}},toBoolean(e){return!!e},toJSON(e){return!!e},fromJSON(e){let t=BigInt(e);return Oe(t),t},sizeInBytes(){return 1},fromField(e){return Oe(e),e}});function zt(e){let t=(1n<<BigInt(e))-1n,n=Re(0n,1n<<BigInt(e),`UInt${e}`);return ye(function(i){let o=BigInt(i);return n(o),o},{...me(n),...he(e,n),toInput(r){return{fields:[],packed:[[r,e]]}},maxValue:t})}var $=zt(32),te=zt(64),Fe=ye(function(t){if(t!==1&&t!==-1)throw Error("Sign: input must be 1 or -1.");return BigInt(t)%W.modulus},{...me(nt),...he(1,nt),emptyValue(){return 1n},toInput(e){return{fields:[],packed:[[e===1n?1n:0n,1]]}},fromFields([e]){return e===0n?1n:(nt(e),e)},toJSON(e){return e===1n?"Positive":"Negative"},fromJSON(e){if(e!=="Positive"&&e!=="Negative")throw Error("Sign: invalid input");return e==="Positive"?1n:Kt}});function ye(e,t){return Object.assign(e,t)}function me(e){return{sizeInFields(){return 1},toFields(t){return[t]},toAuxiliary(){return[]},check:e,fromFields([t]){return e(t),t},toInput(t){return{fields:[t],packed:[]}},toJSON(t){return t.toString()},fromJSON(t){let n=BigInt(t);return e(n),n}}}function he(e,t){let n=Math.ceil(e/8);return Ne(D({toBytes(r){return Z(r,n)},readBytes(r,i){let o=0n,l=0n,a=Math.min(i+n,r.length);for(let u=i;u<a;u++)o+=BigInt(r[u])<<l,l+=8n;return t(o),[o,a]}}),e)}function Re(e,t,n){return r=>{if(r<e)throw Error(`${n}: inputs smaller than ${e} are not allowed, got ${r}`);if(r>=t)throw Error(`${n}: inputs larger than ${t-1n} are not allowed, got ${r}`)}}function Lt(e,t){return n=>{if(!e.has(n))throw Error(`${t}: input must be one of ${[...e].join(", ")}, got ${n}`)}}function _e(){let e=rt(),t=new Set(["object","function"]);function n(r,i){let o=typeof r=="object"&&r!==null?i?.customObjectKeys??Object.keys(r).sort():[],l=new Set([Number,String,Boolean,BigInt,null,void 0]);if(!l.has(r)&&!t.has(typeof r))throw Error(`provable: unsupported type "${r}"`);function a(s){return l.has(s)?0:Array.isArray(s)?s.map(a).reduce((g,p)=>g+p,0):"sizeInFields"in s?s.sizeInFields():Object.values(s).map(a).reduce((g,p)=>g+p,0)}function u(s,g,p=!1){return l.has(s)?[]:!t.has(typeof s)||s===null?[]:Array.isArray(s)?s.map((f,c)=>u(f,g[c])).flat():"toFields"in s?s.toFields(g):(p?o:Object.keys(s).sort()).map(f=>u(s[f],g[f])).flat()}function m(s,g,p=!1){return s===Number?[g??0]:s===String?[g??""]:s===Boolean?[g??!1]:s===BigInt?[g??0n]:s==null?[]:Array.isArray(s)?s.map((f,c)=>m(f,g?.[c])):"toAuxiliary"in s?s.toAuxiliary(g):(p?o:Object.keys(s).sort()).map(f=>m(s[f],g?.[f]))}function y(s,g,p=!1){return l.has(s)?{}:Array.isArray(s)?s.map((f,c)=>y(f,g[c])).reduce(e.append,e.empty):"toInput"in s?s.toInput(g):"toFields"in s?{fields:s.toFields(g)}:(p?o:Object.keys(s).sort()).map(f=>y(s[f],g[f])).reduce(e.append,e.empty)}function S(s,g,p=!1){return s===BigInt?g.toString():s===String||s===Number||s===Boolean?g:s==null?null:!t.has(typeof s)||s===null?g??null:Array.isArray(s)?s.map((f,c)=>S(f,g[c])):"toJSON"in s?s.toJSON(g):Object.fromEntries((p?o:Object.keys(s).sort()).map(f=>[f,S(s[f],g[f])]))}function k(s,g,p=[],f=!1){if(s===Number||s===String||s===Boolean||s===BigInt)return p[0];if(s==null)return s;if(!t.has(typeof s))return null;if(Array.isArray(s)){let b=[],x=0,A=0;for(let T of s){let N=a(T);b.push(k(T,g.slice(A,A+N),p[x])),A+=N,x++}return b}if("fromFields"in s)return s.fromFields(g,p);let c=f?o:Object.keys(s).sort(),d=k(c.map(b=>s[b]),g,p);return Object.fromEntries(c.map((b,x)=>[b,d[x]]))}function h(s,g,p=!1){if(s===BigInt)return BigInt(g);if(s===String||s===Number||s===Boolean)return g;if(s===null)return;if(!t.has(typeof s))return g??void 0;if(Array.isArray(s))return s.map((d,b)=>h(d,g[b]));if("fromJSON"in s)return s.fromJSON(g);let f=p?o:Object.keys(s).sort(),c=h(f.map(d=>s[d]),g);return Object.fromEntries(f.map((d,b)=>[d,c[b]]))}function I(s,g,p=!1){if(!l.has(s))return Array.isArray(s)?s.forEach((f,c)=>I(f,g[c])):"check"in s?s.check(g):(p?o:Object.keys(s).sort()).forEach(f=>I(s[f],g[f]))}return i?.isPure===!0?{sizeInFields:()=>a(r),toFields:s=>u(r,s,!0),toAuxiliary:()=>[],fromFields:s=>k(r,s,[],!0),toInput:s=>y(r,s,!0),toJSON:s=>S(r,s,!0),fromJSON:s=>h(r,s,!0),check:s=>I(r,s,!0)}:{sizeInFields:()=>a(r),toFields:s=>u(r,s,!0),toAuxiliary:s=>m(r,s,!0),fromFields:(s,g)=>k(r,s,g,!0),toInput:s=>y(r,s,!0),toJSON:s=>S(r,s,!0),fromJSON:s=>h(r,s,!0),check:s=>I(r,s,!0)}}return n}function rt(){return{get empty(){return{}},append(e,t){return{fields:(e.fields??[]).concat(t.fields??[]),packed:(e.packed??[]).concat(t.packed??[])}}}}var ot=_e();var we={field:1,scalar:1,publicKey:1,signature:1},R={toProjective({x:e,y:t}){return ie.ofAffine({x:e,y:t,infinity:!1})},fromProjective(e){let{x:t,y:n,infinity:r}=ie.toAffine(e);if(r)throw Error("Group.fromProjective: point is infinity");return{x:t,y:n}},get generatorMina(){return R.fromProjective(ie.one)},scale(e,t){return R.fromProjective(ie.scale(R.toProjective(e),t))}},j1=G(F,we.field),Q1=G(Ct(O({x:j1,isOdd:C},["x","isOdd"]),({x:e})=>{let{mul:t,add:n}=F,r=n(t(e,t(e,e)),5n);if(!F.isSquare(r))throw Error("PublicKey: not a valid group element")}),we.publicKey),w={...ot({x:F,isOdd:C}),...Pe(Q1,J.publicKey),toJSON(e){return w.toBase58(e)},fromJSON(e){return w.fromBase58(e)},toGroup({x:e,isOdd:t}){let{mul:n,add:r}=F,i=r(n(e,n(e,e)),5n),o=F.sqrt(i);if(o===void 0)throw Error("PublicKey.toGroup: not a valid group element");return t!==(o&1n)&&(o=F.negate(o)),{x:e,y:o}},fromGroup({x:e,y:t}){let n=t&1n;return{x:e,isOdd:n}},toInputLegacy({x:e,isOdd:t}){return{fields:[e],bits:[!!t]}}},qt=Re(0n,xe.modulus,"Scalar"),U=ye(function(t){return BigInt(t)%xe.modulus},{...me(qt),...he(xe.sizeInBits,qt),...xe}),Vt=G(U,we.scalar),en=j(Vt,J.privateKey),X={...U,...ot(U),...en,...Vt,toPublicKey(e){return w.fromGroup(R.scale(R.generatorMina,e))}};function Dt(e){return e.hasOwnProperty("to")&&e.hasOwnProperty("from")&&e.hasOwnProperty("fee")&&e.hasOwnProperty("nonce")}function Xt(e){return e.hasOwnProperty("zkappCommand")&&e.hasOwnProperty("feePayer")}function Zt(e){return Dt(e)&&e.hasOwnProperty("amount")}function Wt(e){return Dt(e)&&!e.hasOwnProperty("amount")}function Gt(e){return e.hasOwnProperty("publicKey")&&e.hasOwnProperty("message")}function $t({Field:e,Poseidon:t}){function n(){return[e(0),e(0),e(0)]}function r(y){return t.update(n(),[de(e,y)])}function i(y,S){let k=r(y);return t.update(k,S)[0]}function o(y){return r(y)[0]}let l={empty(){return{hash:o("MinaZkappEventsEmpty"),data:[]}},pushEvent(y,S){let k=i(H.event,S);return{hash:i(H.events,[y.hash,k]),data:[S,...y.data]}},hash(y){return[...y].reverse().reduce(l.pushEvent,l.empty()).hash}},a={...l,...Me({emptyValue:l.empty,toJSON(y){return y.map(S=>S.map(k=>e.toJSON(k)))},fromJSON(y){let S=y.map(h=>h.map(I=>e.fromJSON(I))),k=l.hash(S);return{data:S,hash:k}}})},u={empty(){return{hash:o("MinaZkappSequenceEmpty"),data:[]}},pushEvent(y,S){let k=i(H.event,S);return{hash:i(H.sequenceEvents,[y.hash,k]),data:[S,...y.data]}},hash(y){return[...y].reverse().reduce(u.pushEvent,u.empty()).hash},emptySequenceState(){return o("MinaZkappSequenceStateEmptyElt")},updateSequenceState(y,S){return i(H.sequenceEvents,[y,S])}},m={...u,...Me({emptyValue:u.empty,toJSON(y){return y.map(S=>S.map(k=>e.toJSON(k)))},fromJSON(y){let S=y.map(h=>h.map(I=>e.fromJSON(I))),k=u.hash(S);return{data:S,hash:k}}})};return{Events:a,SequenceEvents:m}}function Me({emptyValue:e,toJSON:t,fromJSON:n}){return{emptyValue:e,sizeInFields(){return 1},toFields({hash:r}){return[r]},toAuxiliary(r){return[r?.data??e().data]},fromFields([r],[i]){return{data:i,hash:r}},toJSON({data:r}){return t(r)},fromJSON(r){return n(r)},check(){},toInput({hash:r}){return{fields:[r]}}}}function Yt({Field:e,Bool:t,Hash:n,packToFields:r}){let i=_e(),o=_t(e),l=1,a={...i(e),emptyValue(){return e(l)},toJSON(h){return o.TokenId.toBase58(h)},fromJSON(h){return o.TokenId.fromBase58(h)}},u={...i({field:e,symbol:String}),toInput({field:h}){return{packed:[[h,48]]}},toJSON({symbol:h}){return h},fromJSON(h){return{symbol:h,field:de(e,h)}}},m={...i({constant:t,signatureNecessary:t,signatureSufficient:t},{customObjectKeys:["constant","signatureNecessary","signatureSufficient"]}),emptyValue(){return{constant:t(!0),signatureNecessary:t(!1),signatureSufficient:t(!0)}},toJSON(h){let I=Number(t.toJSON(h.constant)),s=Number(t.toJSON(h.signatureNecessary)),g=Number(t.toJSON(h.signatureSufficient));switch(`${I}${s}${g}`){case"110":return"Impossible";case"101":return"None";case"000":return"Proof";case"011":return"Signature";case"001":return"Either";default:throw Error("Unexpected permission")}},fromJSON(h){let s={Impossible:"110",None:"101",Proof:"000",Signature:"011",Either:"001"}[h];if(s===void 0)throw Error("Unexpected permission");let[g,p,f]=s.split("").map(c=>t(!!Number(c)));return{constant:g,signatureNecessary:p,signatureSufficient:f}}},y={...i({isSigned:t,isProved:t},{customObjectKeys:["isSigned","isProved"]}),toJSON(h){let I=Number(t.toJSON(h.isSigned)),s=Number(t.toJSON(h.isProved));switch(`${I}${s}`){case"00":return"None_given";case"10":return"Signature";case"01":return"Proof";default:throw Error("Unexpected authorization kind")}},fromJSON(h){let I={None_given:[!1,!1],Signature:[!0,!1],Proof:[!1,!0]}[h];if(I===void 0)throw Error("Unexpected authorization kind");let[s,g]=I.map(t);return{isSigned:s,isProved:g}}};function S(h){let I=ue(Y(h));I.push(!0);let s={packed:I.map(p=>[e(Number(p)),1])},g=r(s);return n.hashWithPrefix(H.zkappUri,g)}let k=Me({emptyValue(){return{data:"",hash:n.hashWithPrefix(H.zkappUri,[e(0),e(0)])}},toJSON(h){return h},fromJSON(h){return{data:h,hash:S(h)}}});return{TokenId:a,TokenSymbol:u,AuthRequired:m,AuthorizationKind:y,ZkappUri:k}}var Je=Qt(W,Tt),jt=Qt(W,Ut);function Qt(e,{fullRounds:t,partialRounds:n,hasInitialRoundConstant:r,stateSize:i,rate:o,power:l,roundConstants:a,mds:u}){if(n!==0)throw Error("we don't support partial rounds");let m=BigInt(l),y=a.map(g=>g.map(BigInt)),S=u.map(g=>g.map(BigInt));function k(){return Array(i).fill(0n)}function h(g){return I(k(),g)[0]}function I([...g],p){if(p.length===0)return s(g),g;let f=Math.ceil(p.length/o)*o;p=p.concat(Array(f-p.length).fill(0n));for(let c=0;c<f;c+=o){for(let d=0;d<o;d++)g[d]=e.add(g[d],p[c+d]);s(g)}return g}function s(g){let p=0;if(r){for(let f=0;f<i;f++)g[f]=e.add(g[f],y[0][f]);p=1}for(let f=0;f<t;f++){for(let d=0;d<i;d++)g[d]=e.power(g[d],m);let c=[...g];for(let d=0;d<i;d++)g[d]=e.dot(S[d],c),g[d]=e.add(g[d],y[f+p][d])}}return{initialState:k,update:I,hash:h}}function it(e,t){function n(o){return t.update(t.initialState(),[de(e,o)])}function r(o){return n(o)[0]}function i(o,l){let a=n(o);return t.update(a,l)[0]}return{salt:n,emptyHashWithPrefix:r,hashWithPrefix:i}}var lt=rt(),at=it(F,Je),{hashWithPrefix:ne}=at,e0=it(F,jt);function ce({fields:e=[],packed:t=[]}){if(t.length===0)return e;let n=[],r=0n,i=0;for(let[o,l]of t)i+=l,i<255?r=r*(1n<<BigInt(l))+o:(n.push(r),i=l,r=o);return n.push(r),e.concat(n)}function Ke({fields:e,bits:t}){let n=[];for(;t.length>0;){let r=t.splice(0,Jt-1),i=F.fromBits(r);n.push(i)}return e.concat(n)}function t0({fields:e,bits:t}){return e.map(F.toBits).flat().concat(t)}var P={empty(){return{fields:[],bits:[]}},bits(e){return{fields:[],bits:e}},append(e,t){return{fields:(e.fields??[]).concat(t.fields??[]),bits:(e.bits??[]).concat(t.bits??[])}}};var{TokenId:n0,TokenSymbol:r0,AuthRequired:o0,AuthorizationKind:i0,ZkappUri:l0}=Yt({Field:F,Bool:C,Hash:at,packToFields:ce}),{Events:a0,SequenceEvents:st}=$t({Field:F,Poseidon:Je}),s0={...F,emptyValue:st.emptySequenceState};var ut={sizeInFields:()=>0,toFields:()=>[],toAuxiliary:()=>[],fromFields:()=>null,check:()=>{},toInput:()=>({}),toJSON:()=>null,fromJSON:()=>null},ze=new Set(["number","string","null"]);function u0(){return{number:{...ut,toAuxiliary:(e=0)=>[e],toJSON:e=>e,fromJSON:e=>e,fromFields:(e,[t])=>t},string:{...ut,toAuxiliary:(e="")=>[e],toJSON:e=>e,fromJSON:e=>e,fromFields:(e,[t])=>t},null:ut}}function c0(e,t){let n=e.Field,r=u0();function i(p){return{sizeInFields(){return m(p)},toFields(f){return a(p,f)},toAuxiliary(f){return u(p,f)},fromFields(f,c){return y(p,f,c)},toJSON(f){return o(p,f)},fromJSON(f){return l(p,f)},check(f){h(p,f)},toInput(f){return I(p,f)},emptyValue(){return S(p)}}}function o(p,f){return s({map(c,d){return c.toJSON(d)},reduceArray(c){return c},reduceObject(c,d){return d},reduceFlaggedOption({isSome:c,value:d}){return c?d:null},reduceOrUndefined(c){return c??null}},p,f)}function l(p,f){let{checkedTypeName:c}=p;if(c)return t[c].fromJSON(f);if(p.type==="array"){let d=p;return f.map(b=>l(d.inner,b))}if(p.type==="option"){let d=p;switch(d.optionType){case"closedInterval":case"flaggedOption":{let b=e.Bool.fromJSON(f!==null),x;if(f!==null)x=l(d.inner,f);else if(x=S(d.inner),d.optionType==="closedInterval"){let A=d.inner.entries.lower,T=e[A.type];x.lower=T.fromJSON(d.rangeMin),x.upper=T.fromJSON(d.rangeMax)}return{isSome:b,value:x}}case"orUndefined":return f===null?void 0:l(d.inner,f);default:throw Error("bug")}}if(p.type==="object"){let{keys:d,entries:b}=p,x={};for(let A=0;A<d.length;A++){let T=b[d[A]];x[d[A]]=l(T,f[d[A]])}return x}return ze.has(p.type)?r[p.type].fromJSON(f):e[p.type].fromJSON(f)}function a(p,f){return s({map(c,d){return c.toFields(d)},reduceArray(c){return c.flat()},reduceObject(c,d){return c.map(b=>d[b]).flat()},reduceFlaggedOption({isSome:c,value:d}){return[c,d].flat()},reduceOrUndefined(c){return[]}},p,f)}function u(p,f){return s({map(c,d){return c.toAuxiliary(d)},reduceArray(c){return c},reduceObject(c,d){return c.map(b=>d[b])},reduceFlaggedOption({value:c}){return c},reduceOrUndefined(c){return c===void 0?[!1]:[!0,c]}},p,f)}function m(p){let f={map(c){return c.sizeInFields()},reduceArray(c,{inner:d,staticLength:b}){return(b??NaN)*s(f,d)},reduceObject(c,d){return c.map(b=>d[b]).reduce((b,x)=>b+x)},reduceFlaggedOption({isSome:c,value:d}){return c+d},reduceOrUndefined(c){return 0}};return s(f,p)}function y(p,f,c){let{checkedTypeName:d}=p;if(d)return t[d].fromFields(f,c);if(p.type==="array"){let b=p,x=m(b.inner),A=c.length,T=[];for(let N=0,re=0;N<A;N++,re+=x)T[N]=y(b.inner,f.slice(re,re+x),c[N]);return T}if(p.type==="option"){let{optionType:b,inner:x}=p;switch(b){case"closedInterval":case"flaggedOption":{let[A,...T]=f,N=e.Bool.fromFields([A],[]),re=y(x,T,c);return{isSome:N,value:re}}case"orUndefined":{let[A,T]=c;return A?y(x,f,T):void 0}default:throw Error("bug")}}if(p.type==="object"){let{keys:b,entries:x}=p,A={},T=0;for(let N=0;N<b.length;N++){let re=x[b[N]],vt=m(re);A[b[N]]=y(re,f.slice(T,T+vt),c[N]),T+=vt}return A}return ze.has(p.type)?r[p.type].fromFields(f,c):e[p.type].fromFields(f,c)}function S(p){let{checkedTypeName:f}=p;if(f)return k(p);if(p.type==="array"){let c=p,{inner:d,staticLength:b}=c;return b==null?[]:Array(b).fill(S(d))}if(p.type==="option"){let c=p;switch(c.optionType){case"closedInterval":case"flaggedOption":{let d=e.Bool.fromJSON(!1),b=S(c.inner);if(c.optionType==="closedInterval"){let x=c.inner.entries.lower,A=e[x.type];b.lower=A.fromJSON(c.rangeMin),b.upper=A.fromJSON(c.rangeMax)}return{isSome:d,value:b}}case"orUndefined":return;default:throw Error("bug")}}if(p.type==="object"){let{keys:c,entries:d}=p,b={};for(let x=0;x<c.length;x++){let A=d[c[x]];b[c[x]]=S(A)}return b}return k(p)}function k(p){let{checkedTypeName:f}=p;if(f){let x=t[f];if(x.emptyValue)return x.emptyValue()}let c=p.type;if(e[c]){let x=e[c];if(x.emptyValue)return x.emptyValue()}let d=n.fromJSON("0"),b=Array(m(p)).fill(d);return y(p,b,u(p))}function h(p,f){return s({map(c,d){return c.check(d)},reduceArray(){},reduceObject(){},reduceFlaggedOption(){},reduceOrUndefined(){}},p,f)}function I(p,f){return s({map(c,d){return c.toInput(d)},reduceArray(c){let d={fields:[],packed:[]};for(let{fields:b,packed:x}of c)b&&d.fields.push(...b),x&&d.packed.push(...x);return d},reduceObject(c,d){let b={fields:[],packed:[]};for(let x of c){let{fields:A,packed:T}=d[x];A&&b.fields.push(...A),T&&b.packed.push(...T)}return b},reduceFlaggedOption({isSome:c,value:d}){return{fields:d.fields,packed:c.packed.concat(d.packed??[])}},reduceOrUndefined(c){return{}}},p,f)}function s(p,f,c){let{checkedTypeName:d}=f;if(d)return p.map(t[d],c);if(f.type==="array"){let b=f,x=c;b.staticLength!=null&&x===void 0&&(x=Array(b.staticLength).fill(void 0));let A=x?.map(T=>s(p,b.inner,T))??[];return p.reduceArray(A,b)}if(f.type==="option"){let{optionType:b,inner:x}=f;switch(b){case"closedInterval":case"flaggedOption":let A=c;return p.reduceFlaggedOption({isSome:p.map(e.Bool,A?.isSome),value:s(p,x,A?.value)});case"orUndefined":let T=c===void 0?void 0:s(p,x,c);return p.reduceOrUndefined(T);default:throw Error("bug")}}if(f.type==="object"){let{keys:b,entries:x}=f,A=c,T={};return b.forEach(N=>{T[N]=s(p,x[N],A?.[N])}),p.reduceObject(b,T)}return ze.has(f.type)?p.map(r[f.type],c):p.map(e[f.type],c)}function g(p,f){return s({map(c,d){return c.toJSON(d)},reduceArray(c){return c.length===0||c.every(d=>d===null)?null:c},reduceObject(c,d){for(let b in d)d[b]===null&&delete d[b];return Object.keys(d).length===0?null:d},reduceFlaggedOption({isSome:c,value:d}){return c?d:null},reduceOrUndefined(c){return c??null}},p,f)}return{provableFromLayout:i,toJSONEssential:g}}var ct={ZkappCommand:{type:"object",name:"ZkappCommand",docs:null,keys:["feePayer","accountUpdates","memo"],entries:{feePayer:{type:"object",name:"ZkappFeePayer",docs:null,keys:["body","authorization"],entries:{body:{type:"object",name:"FeePayerBody",docs:null,keys:["publicKey","fee","validUntil","nonce"],entries:{publicKey:{type:"PublicKey"},fee:{type:"UInt64"},validUntil:{type:"option",optionType:"orUndefined",inner:{type:"UInt32"}},nonce:{type:"UInt32"}},docEntries:{publicKey:null,fee:null,validUntil:null,nonce:null}},authorization:{type:"string"}},docEntries:{body:null,authorization:null}},accountUpdates:{type:"array",inner:{type:"object",name:"ZkappAccountUpdate",docs:"An account update in a zkApp transaction",keys:["body","authorization"],entries:{body:{type:"object",name:"AccountUpdateBody",docs:null,keys:["publicKey","tokenId","update","balanceChange","incrementNonce","events","sequenceEvents","callData","callDepth","preconditions","useFullCommitment","caller","authorizationKind"],entries:{publicKey:{type:"PublicKey"},tokenId:{type:"TokenId"},update:{type:"object",name:"AccountUpdateModification",docs:null,keys:["appState","delegate","verificationKey","permissions","zkappUri","tokenSymbol","timing","votingFor"],entries:{appState:{type:"array",inner:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},staticLength:8},delegate:{type:"option",optionType:"flaggedOption",inner:{type:"PublicKey"}},verificationKey:{type:"option",optionType:"flaggedOption",inner:{type:"object",name:"VerificationKeyWithHash",docs:null,keys:["data","hash"],entries:{data:{type:"string"},hash:{type:"Field"}},docEntries:{data:null,hash:null}}},permissions:{type:"option",optionType:"flaggedOption",inner:{type:"object",name:"Permissions",docs:null,keys:["editState","send","receive","setDelegate","setPermissions","setVerificationKey","setZkappUri","editSequenceState","setTokenSymbol","incrementNonce","setVotingFor"],entries:{editState:{type:"AuthRequired"},send:{type:"AuthRequired"},receive:{type:"AuthRequired"},setDelegate:{type:"AuthRequired"},setPermissions:{type:"AuthRequired"},setVerificationKey:{type:"AuthRequired"},setZkappUri:{type:"AuthRequired"},editSequenceState:{type:"AuthRequired"},setTokenSymbol:{type:"AuthRequired"},incrementNonce:{type:"AuthRequired"},setVotingFor:{type:"AuthRequired"}},docEntries:{editState:null,send:null,receive:null,setDelegate:null,setPermissions:null,setVerificationKey:null,setZkappUri:null,editSequenceState:null,setTokenSymbol:null,incrementNonce:null,setVotingFor:null}}},zkappUri:{type:"option",optionType:"flaggedOption",inner:{type:"string",checkedType:{type:"object",name:"Events",docs:null,keys:["data","hash"],entries:{data:{type:"string"},hash:{type:"Field"}},docEntries:{data:null,hash:null}},checkedTypeName:"ZkappUri"}},tokenSymbol:{type:"option",optionType:"flaggedOption",inner:{type:"string",checkedType:{type:"TokenSymbol"},checkedTypeName:"TokenSymbol"}},timing:{type:"option",optionType:"flaggedOption",inner:{type:"object",name:"Timing",docs:null,keys:["initialMinimumBalance","cliffTime","cliffAmount","vestingPeriod","vestingIncrement"],entries:{initialMinimumBalance:{type:"UInt64"},cliffTime:{type:"UInt32"},cliffAmount:{type:"UInt64"},vestingPeriod:{type:"UInt32"},vestingIncrement:{type:"UInt64"}},docEntries:{initialMinimumBalance:null,cliffTime:null,cliffAmount:null,vestingPeriod:null,vestingIncrement:null}}},votingFor:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}}},docEntries:{appState:null,delegate:null,verificationKey:null,permissions:null,zkappUri:null,tokenSymbol:null,timing:null,votingFor:null}},balanceChange:{type:"object",name:"BalanceChange",docs:null,keys:["magnitude","sgn"],entries:{magnitude:{type:"UInt64"},sgn:{type:"Sign"}},docEntries:{magnitude:null,sgn:null}},incrementNonce:{type:"Bool"},events:{type:"array",inner:{type:"array",inner:{type:"Field"},staticLength:null},staticLength:null,checkedType:{type:"object",name:"Events",docs:null,keys:["data","hash"],entries:{data:{type:"array",inner:{type:"array",inner:{type:"Field"},staticLength:null},staticLength:null},hash:{type:"Field"}},docEntries:{data:null,hash:null}},checkedTypeName:"Events"},sequenceEvents:{type:"array",inner:{type:"array",inner:{type:"Field"},staticLength:null},staticLength:null,checkedType:{type:"object",name:"Events",docs:null,keys:["data","hash"],entries:{data:{type:"array",inner:{type:"array",inner:{type:"Field"},staticLength:null},staticLength:null},hash:{type:"Field"}},docEntries:{data:null,hash:null}},checkedTypeName:"SequenceEvents"},callData:{type:"Field"},callDepth:{type:"number"},preconditions:{type:"object",name:"Preconditions",docs:null,keys:["network","account"],entries:{network:{type:"object",name:"NetworkPrecondition",docs:null,keys:["snarkedLedgerHash","timestamp","blockchainLength","minWindowDensity","totalCurrency","globalSlotSinceHardFork","globalSlotSinceGenesis","stakingEpochData","nextEpochData"],entries:{snarkedLedgerHash:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},timestamp:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"18446744073709551615",inner:{type:"object",name:"BlockTimeInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt64"},upper:{type:"UInt64"}},docEntries:{lower:null,upper:null}}},blockchainLength:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"LengthInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}},minWindowDensity:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"LengthInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}},totalCurrency:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"18446744073709551615",inner:{type:"object",name:"CurrencyAmountInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt64"},upper:{type:"UInt64"}},docEntries:{lower:null,upper:null}}},globalSlotSinceHardFork:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"GlobalSlotInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}},globalSlotSinceGenesis:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"GlobalSlotInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}},stakingEpochData:{type:"object",name:"EpochDataPrecondition",docs:null,keys:["ledger","seed","startCheckpoint","lockCheckpoint","epochLength"],entries:{ledger:{type:"object",name:"EpochLedgerPrecondition",docs:null,keys:["hash","totalCurrency"],entries:{hash:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},totalCurrency:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"18446744073709551615",inner:{type:"object",name:"CurrencyAmountInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt64"},upper:{type:"UInt64"}},docEntries:{lower:null,upper:null}}}},docEntries:{hash:null,totalCurrency:null}},seed:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},startCheckpoint:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},lockCheckpoint:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},epochLength:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"LengthInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}}},docEntries:{ledger:null,seed:null,startCheckpoint:null,lockCheckpoint:null,epochLength:null}},nextEpochData:{type:"object",name:"EpochDataPrecondition",docs:null,keys:["ledger","seed","startCheckpoint","lockCheckpoint","epochLength"],entries:{ledger:{type:"object",name:"EpochLedgerPrecondition",docs:null,keys:["hash","totalCurrency"],entries:{hash:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},totalCurrency:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"18446744073709551615",inner:{type:"object",name:"CurrencyAmountInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt64"},upper:{type:"UInt64"}},docEntries:{lower:null,upper:null}}}},docEntries:{hash:null,totalCurrency:null}},seed:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},startCheckpoint:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},lockCheckpoint:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},epochLength:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"LengthInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}}},docEntries:{ledger:null,seed:null,startCheckpoint:null,lockCheckpoint:null,epochLength:null}}},docEntries:{snarkedLedgerHash:null,timestamp:null,blockchainLength:null,minWindowDensity:null,totalCurrency:null,globalSlotSinceHardFork:null,globalSlotSinceGenesis:null,stakingEpochData:null,nextEpochData:null}},account:{type:"object",name:"AccountPrecondition",docs:null,keys:["balance","nonce","receiptChainHash","delegate","state","sequenceState","provedState","isNew"],entries:{balance:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"18446744073709551615",inner:{type:"object",name:"BalanceInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt64"},upper:{type:"UInt64"}},docEntries:{lower:null,upper:null}}},nonce:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"NonceInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}},receiptChainHash:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},delegate:{type:"option",optionType:"flaggedOption",inner:{type:"PublicKey"}},state:{type:"array",inner:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},staticLength:8},sequenceState:{type:"option",optionType:"flaggedOption",inner:{type:"Field",checkedType:{type:"Field"},checkedTypeName:"SequenceState"}},provedState:{type:"option",optionType:"flaggedOption",inner:{type:"Bool"}},isNew:{type:"option",optionType:"flaggedOption",inner:{type:"Bool"}}},docEntries:{balance:null,nonce:null,receiptChainHash:null,delegate:null,state:null,sequenceState:null,provedState:null,isNew:null}}},docEntries:{network:null,account:null}},useFullCommitment:{type:"Bool"},caller:{type:"TokenId"},authorizationKind:{type:"AuthorizationKind"}},docEntries:{publicKey:null,tokenId:null,update:null,balanceChange:null,incrementNonce:null,events:null,sequenceEvents:null,callData:null,callDepth:null,preconditions:null,useFullCommitment:null,caller:null,authorizationKind:null}},authorization:{type:"object",name:"Control",docs:null,keys:["proof","signature"],entries:{proof:{type:"option",optionType:"orUndefined",inner:{type:"string"}},signature:{type:"option",optionType:"orUndefined",inner:{type:"string"}}},docEntries:{proof:null,signature:null}}},docEntries:{body:null,authorization:null}},staticLength:null},memo:{type:"string"}},docEntries:{feePayer:null,accountUpdates:null,memo:null}},AccountUpdate:{type:"object",name:"ZkappAccountUpdate",docs:"An account update in a zkApp transaction",keys:["body","authorization"],entries:{body:{type:"object",name:"AccountUpdateBody",docs:null,keys:["publicKey","tokenId","update","balanceChange","incrementNonce","events","sequenceEvents","callData","callDepth","preconditions","useFullCommitment","caller","authorizationKind"],entries:{publicKey:{type:"PublicKey"},tokenId:{type:"TokenId"},update:{type:"object",name:"AccountUpdateModification",docs:null,keys:["appState","delegate","verificationKey","permissions","zkappUri","tokenSymbol","timing","votingFor"],entries:{appState:{type:"array",inner:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},staticLength:8},delegate:{type:"option",optionType:"flaggedOption",inner:{type:"PublicKey"}},verificationKey:{type:"option",optionType:"flaggedOption",inner:{type:"object",name:"VerificationKeyWithHash",docs:null,keys:["data","hash"],entries:{data:{type:"string"},hash:{type:"Field"}},docEntries:{data:null,hash:null}}},permissions:{type:"option",optionType:"flaggedOption",inner:{type:"object",name:"Permissions",docs:null,keys:["editState","send","receive","setDelegate","setPermissions","setVerificationKey","setZkappUri","editSequenceState","setTokenSymbol","incrementNonce","setVotingFor"],entries:{editState:{type:"AuthRequired"},send:{type:"AuthRequired"},receive:{type:"AuthRequired"},setDelegate:{type:"AuthRequired"},setPermissions:{type:"AuthRequired"},setVerificationKey:{type:"AuthRequired"},setZkappUri:{type:"AuthRequired"},editSequenceState:{type:"AuthRequired"},setTokenSymbol:{type:"AuthRequired"},incrementNonce:{type:"AuthRequired"},setVotingFor:{type:"AuthRequired"}},docEntries:{editState:null,send:null,receive:null,setDelegate:null,setPermissions:null,setVerificationKey:null,setZkappUri:null,editSequenceState:null,setTokenSymbol:null,incrementNonce:null,setVotingFor:null}}},zkappUri:{type:"option",optionType:"flaggedOption",inner:{type:"string",checkedType:{type:"object",name:"Events",docs:null,keys:["data","hash"],entries:{data:{type:"string"},hash:{type:"Field"}},docEntries:{data:null,hash:null}},checkedTypeName:"ZkappUri"}},tokenSymbol:{type:"option",optionType:"flaggedOption",inner:{type:"string",checkedType:{type:"TokenSymbol"},checkedTypeName:"TokenSymbol"}},timing:{type:"option",optionType:"flaggedOption",inner:{type:"object",name:"Timing",docs:null,keys:["initialMinimumBalance","cliffTime","cliffAmount","vestingPeriod","vestingIncrement"],entries:{initialMinimumBalance:{type:"UInt64"},cliffTime:{type:"UInt32"},cliffAmount:{type:"UInt64"},vestingPeriod:{type:"UInt32"},vestingIncrement:{type:"UInt64"}},docEntries:{initialMinimumBalance:null,cliffTime:null,cliffAmount:null,vestingPeriod:null,vestingIncrement:null}}},votingFor:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}}},docEntries:{appState:null,delegate:null,verificationKey:null,permissions:null,zkappUri:null,tokenSymbol:null,timing:null,votingFor:null}},balanceChange:{type:"object",name:"BalanceChange",docs:null,keys:["magnitude","sgn"],entries:{magnitude:{type:"UInt64"},sgn:{type:"Sign"}},docEntries:{magnitude:null,sgn:null}},incrementNonce:{type:"Bool"},events:{type:"array",inner:{type:"array",inner:{type:"Field"},staticLength:null},staticLength:null,checkedType:{type:"object",name:"Events",docs:null,keys:["data","hash"],entries:{data:{type:"array",inner:{type:"array",inner:{type:"Field"},staticLength:null},staticLength:null},hash:{type:"Field"}},docEntries:{data:null,hash:null}},checkedTypeName:"Events"},sequenceEvents:{type:"array",inner:{type:"array",inner:{type:"Field"},staticLength:null},staticLength:null,checkedType:{type:"object",name:"Events",docs:null,keys:["data","hash"],entries:{data:{type:"array",inner:{type:"array",inner:{type:"Field"},staticLength:null},staticLength:null},hash:{type:"Field"}},docEntries:{data:null,hash:null}},checkedTypeName:"SequenceEvents"},callData:{type:"Field"},callDepth:{type:"number"},preconditions:{type:"object",name:"Preconditions",docs:null,keys:["network","account"],entries:{network:{type:"object",name:"NetworkPrecondition",docs:null,keys:["snarkedLedgerHash","timestamp","blockchainLength","minWindowDensity","totalCurrency","globalSlotSinceHardFork","globalSlotSinceGenesis","stakingEpochData","nextEpochData"],entries:{snarkedLedgerHash:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},timestamp:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"18446744073709551615",inner:{type:"object",name:"BlockTimeInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt64"},upper:{type:"UInt64"}},docEntries:{lower:null,upper:null}}},blockchainLength:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"LengthInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}},minWindowDensity:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"LengthInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}},totalCurrency:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"18446744073709551615",inner:{type:"object",name:"CurrencyAmountInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt64"},upper:{type:"UInt64"}},docEntries:{lower:null,upper:null}}},globalSlotSinceHardFork:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"GlobalSlotInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}},globalSlotSinceGenesis:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"GlobalSlotInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}},stakingEpochData:{type:"object",name:"EpochDataPrecondition",docs:null,keys:["ledger","seed","startCheckpoint","lockCheckpoint","epochLength"],entries:{ledger:{type:"object",name:"EpochLedgerPrecondition",docs:null,keys:["hash","totalCurrency"],entries:{hash:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},totalCurrency:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"18446744073709551615",inner:{type:"object",name:"CurrencyAmountInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt64"},upper:{type:"UInt64"}},docEntries:{lower:null,upper:null}}}},docEntries:{hash:null,totalCurrency:null}},seed:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},startCheckpoint:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},lockCheckpoint:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},epochLength:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"LengthInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}}},docEntries:{ledger:null,seed:null,startCheckpoint:null,lockCheckpoint:null,epochLength:null}},nextEpochData:{type:"object",name:"EpochDataPrecondition",docs:null,keys:["ledger","seed","startCheckpoint","lockCheckpoint","epochLength"],entries:{ledger:{type:"object",name:"EpochLedgerPrecondition",docs:null,keys:["hash","totalCurrency"],entries:{hash:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},totalCurrency:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"18446744073709551615",inner:{type:"object",name:"CurrencyAmountInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt64"},upper:{type:"UInt64"}},docEntries:{lower:null,upper:null}}}},docEntries:{hash:null,totalCurrency:null}},seed:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},startCheckpoint:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},lockCheckpoint:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},epochLength:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"LengthInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}}},docEntries:{ledger:null,seed:null,startCheckpoint:null,lockCheckpoint:null,epochLength:null}}},docEntries:{snarkedLedgerHash:null,timestamp:null,blockchainLength:null,minWindowDensity:null,totalCurrency:null,globalSlotSinceHardFork:null,globalSlotSinceGenesis:null,stakingEpochData:null,nextEpochData:null}},account:{type:"object",name:"AccountPrecondition",docs:null,keys:["balance","nonce","receiptChainHash","delegate","state","sequenceState","provedState","isNew"],entries:{balance:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"18446744073709551615",inner:{type:"object",name:"BalanceInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt64"},upper:{type:"UInt64"}},docEntries:{lower:null,upper:null}}},nonce:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"NonceInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}},receiptChainHash:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},delegate:{type:"option",optionType:"flaggedOption",inner:{type:"PublicKey"}},state:{type:"array",inner:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},staticLength:8},sequenceState:{type:"option",optionType:"flaggedOption",inner:{type:"Field",checkedType:{type:"Field"},checkedTypeName:"SequenceState"}},provedState:{type:"option",optionType:"flaggedOption",inner:{type:"Bool"}},isNew:{type:"option",optionType:"flaggedOption",inner:{type:"Bool"}}},docEntries:{balance:null,nonce:null,receiptChainHash:null,delegate:null,state:null,sequenceState:null,provedState:null,isNew:null}}},docEntries:{network:null,account:null}},useFullCommitment:{type:"Bool"},caller:{type:"TokenId"},authorizationKind:{type:"AuthorizationKind"}},docEntries:{publicKey:null,tokenId:null,update:null,balanceChange:null,incrementNonce:null,events:null,sequenceEvents:null,callData:null,callDepth:null,preconditions:null,useFullCommitment:null,caller:null,authorizationKind:null}},authorization:{type:"object",name:"Control",docs:null,keys:["proof","signature"],entries:{proof:{type:"option",optionType:"orUndefined",inner:{type:"string"}},signature:{type:"option",optionType:"orUndefined",inner:{type:"string"}}},docEntries:{proof:null,signature:null}}},docEntries:{body:null,authorization:null}}};var tn={PublicKey:w,UInt64:te,UInt32:$,TokenId:n0,Field:F,Bool:C,AuthRequired:o0,Sign:Fe,AuthorizationKind:i0},nn={ZkappUri:l0,TokenSymbol:r0,Events:a0,SequenceEvents:st,SequenceState:s0},{provableFromLayout:p0,toJSONEssential:r3}=c0(tn,nn),pe=p0(ct.ZkappCommand),pt=p0(ct.AccountUpdate);function rn(e){if(e.length>32)throw Error("Memo.fromString: string too long");return`${String.fromCharCode(e.length)}${e}`+"\0".repeat(32-e.length)}function on(e){let t=z.toBits(e),n=Ke(P.bits(t));return ne(H.zkappMemo,n)}var ft=34,f0=D({toBytes(e){return Y(e)},readBytes(e,t){let n=t+ft;return[String.fromCharCode(...e.slice(t,n)),n]}}),z={fromString:rn,hash:on,...Ne(f0,ft*8),...j(f0,J.userCommandMemo),sizeInBytes(){return ft},emptyValue(){return z.fromString("")}};var gt=Xe(ht(),1);var N0=0x01n,P0=0x00n,C0=G(O({r:F,s:U},["r","s"]),we.signature),V={...C0,...j(C0,J.signature),toJSON({r:e,s:t}){return{field:F.toJSON(e),scalar:U.toJSON(t)}},fromJSON({field:e,scalar:t}){let n=F.fromJSON(e),r=U.fromJSON(t);return{r:n,s:r}}};function O0(e,t,n){return mn({fields:[e]},t,n)}function R0(e,t,n,r){return gn(e,{fields:[t]},n,r)}function mn(e,t,n){let r=R.scale(R.generatorMina,t),i=hn(e,r,t,n);if(U.equal(i,0n))throw Error("sign: derived nonce is 0");let{x:o,y:l}=R.scale(R.generatorMina,i),a=F.isEven(l)?i:U.negate(i),u=_0(e,r,o,n),m=U.add(a,U.mul(u,t));return{r:o,s:m}}function hn(e,t,n,r){let{x:i,y:o}=t,l=F(n),a=r==="mainnet"?N0:P0,u=lt.append(e,{fields:[i,o,l],packed:[[a,8]]}),y=ce(u).map(F.toBits).flat(),S=Ce(y),k=(0,gt.blake2b)(Uint8Array.from(S),void 0,32);return k[k.length-1]&=63,U.fromBytes([...k])}function _0(e,t,n,r){let{x:i,y:o}=t,l=lt.append(e,{fields:[i,o,n]}),a=r==="mainnet"?H.signatureMainnet:H.signatureTestnet;return ne(a,ce(l))}function gn(e,t,n,r){let{r:i,s:o}=e,l=w.toGroup(n),a=_0(t,l,i,r),{scale:u,one:m,sub:y}=ie,S=y(u(m,o),u(R.toProjective(l),a));try{let{x:k,y:h}=R.fromProjective(S);return F.isEven(h)&&F.equal(k,i)}catch{return!1}}function St(e,t,n){let r=R.scale(R.generatorMina,t),i=Sn(e,r,t,n);if(U.equal(i,0n))throw Error("sign: derived nonce is 0");let{x:o,y:l}=R.scale(R.generatorMina,i),a=F.isEven(l)?i:U.negate(i),u=M0(e,r,o,n),m=U.add(a,U.mul(u,t));return{r:o,s:m}}function bt(e,t,n,r){try{let{r:i,s:o}=e,l=w.toGroup(n),a=M0(t,l,i,r),{scale:u,one:m,sub:y}=ie,S=y(u(m,o),u(R.toProjective(l),a)),{x:k,y:h}=R.fromProjective(S);return F.isEven(h)&&F.equal(k,i)}catch{return!1}}function Sn(e,t,n,r){let{x:i,y:o}=t,l=U.toBits(n),u=ue([Number(r==="mainnet"?N0:P0)]),m=P.append(e,{fields:[i,o],bits:[...l,...u]}),y=t0(m),S=Ce(y),k=(0,gt.blake2b)(Uint8Array.from(S),void 0,32);return k[k.length-1]&=63,U.fromBytes([...k])}function M0(e,t,n,r){let{x:i,y:o}=t,l=P.append(e,{fields:[i,o,n],bits:[]}),a=r==="mainnet"?H.signatureMainnet:H.signatureTestnet;return e0.hashWithPrefix(a,Ke(l))}function kt(e,t,n){let r=pe.fromJSON(e),i=K0(r),o=X.fromBase58(t),l=O0(i,o,n);return r.feePayer.authorization=V.toBase58(l),pe.toJSON(r)}function J0(e,t,n){let r=pe.fromJSON(e),i=K0(r),o=w.fromBase58(t),l=V.fromBase58(r.feePayer.authorization);return R0(l,i,o,n)}function K0(e){let t=z0(e.accountUpdates),n=q0(t),r=z.hash(z.fromBase58(e.memo)),i=bn(e.feePayer);return ne(H.accountUpdateCons,[r,i,n])}function z0(e,t=0){let n=t>0?e:[...e],r=[];for(;n.length>0;){let i=n[0];if(i.body.callDepth<t)return r;console.assert(i.body.callDepth===t,"toCallForest"),n.shift();let o=z0(n,t+1);r.push({accountUpdate:i,children:o})}return r}function L0(e){let t=pt.toInput(e),n=ce(t);return ne(H.body,n)}function q0(e){let t=0n;for(let n of[...e].reverse()){let r=q0(n.children),i=L0(n.accountUpdate),o=ne(H.accountUpdateNode,[i,r]);t=ne(H.accountUpdateCons,[o,t])}return t}function bn(e){let t=kn(e);return L0(t)}function kn({body:{fee:e,nonce:t,publicKey:n,validUntil:r},authorization:i}){let{body:o}=pt.emptyValue();o.publicKey=n,o.balanceChange={magnitude:e,sgn:Fe(-1)},o.incrementNonce=C(!0),o.preconditions.network.globalSlotSinceGenesis={isSome:C(!0),value:{lower:$(0),upper:r??$.maxValue}},o.preconditions.account.nonce={isSome:C(!0),value:{lower:t,upper:t}};let l={constant:C(!1),signatureNecessary:C(!0),signatureSufficient:C(!0)},a={constant:C(!0),signatureNecessary:C(!1),signatureSufficient:C(!0)};return o.update.permissions.value={editState:l,send:l,receive:a,setDelegate:l,setPermissions:l,setVerificationKey:l,setZkappUri:l,editSequenceState:l,setTokenSymbol:l,incrementNonce:l,setVotingFor:l},o.useFullCommitment=C(!0),o.authorizationKind={isProved:C(!1),isSigned:C(!0)},{body:o,authorization:{signature:i}}}function V0(e,t,n){let r=Te(e);return X0(r,t,n)}function D0(e,t,n){let r=Ue(e);return X0(r,t,n)}function X0(e,t,n){let r=$0(e),i=X.fromBase58(t),o=St(r,i,n);return V.toJSON(o)}function Z0(e,t,n,r){try{return G0(Te(e),t,n,r)}catch{return!1}}function W0(e,t,n,r){try{return G0(Ue(e),t,n,r)}catch{return!1}}function G0(e,t,n,r){let i=$0(e),o=V.fromJSON(t),l=w.fromBase58(n);return bt(o,i,l,r)}function $0({common:e,body:t}){return P.append(vn(e),xn(t))}function xn({tag:e,source:t,receiver:n,amount:r}){return[En(e),w.toInputLegacy(t),w.toInputLegacy(n),P.bits(Y0),P.bits(te.toBits(r)),P.bits([!1])].reduce(P.append)}function vn({fee:e,feePayer:t,nonce:n,validUntil:r,memo:i}){return[P.bits(te.toBits(e)),P.bits(Y0),w.toInputLegacy(t),P.bits($.toBits(n)),P.bits($.toBits(r)),P.bits(z.toBits(i))].reduce(P.append)}function En(e){let t={Payment:0,StakeDelegation:1}[e],n=[t&4,t&2,t&1].map(Boolean);return P.bits(n)}var Y0=[!0,...Array(63).fill(!1)];function Te({common:e,body:{source:t,receiver:n,amount:r}}){return{common:j0(e),body:{tag:"Payment",source:w.fromJSON(t),receiver:w.fromJSON(n),amount:te.fromJSON(r)}}}function Ue({common:e,body:{delegator:t,newDelegate:n}}){return{common:j0(e),body:{tag:"StakeDelegation",source:w.fromJSON(t),receiver:w.fromJSON(n),amount:te(0)}}}function j0(e){return{fee:te.fromJSON(e.fee),feePayer:w.fromJSON(e.feePayer),nonce:$.fromJSON(e.nonce),validUntil:$.fromJSON(e.validUntil),memo:z.fromString(e.memo)}}function Q0(e,t,n){let r=t1(e),i=X.fromBase58(t),o=St(r,i,n);return V.toJSON(o)}function e1(e,t,n,r){try{let i=t1(e),o=V.fromJSON(t),l=w.fromBase58(n);return bt(o,i,l,r)}catch{return!1}}function t1(e){let t=Y(e).map(n=>ue([n]).reverse()).flat();return P.bits(t)}var xt=Xe(ht(),1);var n1={r:F(1),s:U(1)};function r1(e,{berkeley:t=!1}={}){if(!t)return Cn(e);let n=l1(Te(e.data));return i1({signer:w.fromBase58(e.data.body.source),signature:n1,payload:n})}function o1(e,{berkeley:t=!1}={}){if(!t)return Nn(e);let n=l1(Ue(e.data));return i1({signer:w.fromBase58(e.data.body.delegator),signature:n1,payload:n})}function i1(e){let t=Hn.toBytes(e),n=(0,xt.blake2b)(Uint8Array.from(t),void 0,32);return a1.toBase58(n)}function l1({common:e,body:t}){let{tag:n,...r}=t;switch(n){case"Payment":return{common:e,body:{type:n,value:r}};case"StakeDelegation":let{source:i,receiver:o}=r;return{common:e,body:{type:n,value:{type:"SetDelegate",value:{delegator:i,newDelegate:o}}}}}}var Se=O({x:F,isOdd:C},["x","isOdd"]),Fn=O({fee:fe,feePayer:Se,nonce:fe,validUntil:fe,memo:et},["fee","feePayer","nonce","validUntil","memo"]),wn=O({source:Se,receiver:Se,amount:fe},["source","receiver","amount"]),In=O({delegator:Se,newDelegate:Se},["delegator","newDelegate"]),An=ve([{type:"SetDelegate",value:In}]),Bn=ve([{type:"Payment",value:wn},{type:"StakeDelegation",value:An}]),Tn=O({common:Fn,body:Bn},["common","body"]),Un=O({r:F,s:U},["r","s"]),Hn=O({payload:Tn,signer:Se,signature:Un},["payload","signer","signature"]),a1=j(G(D({toBytes(e){return[e.length,...e]},readBytes(e){return[Uint8Array.from(e.slice(1)),e.length]}}),1),J.transactionHash);function Cn({data:e,signature:t}){let n=u1(Te(e));return s1({signer:w.fromBase58(e.body.source),signature:V.fromJSON(t),payload:n})}function Nn({data:e,signature:t}){let n=u1(Ue(e));return s1({signer:w.fromBase58(e.body.delegator),signature:V.fromJSON(t),payload:n})}function s1(e){let t=Kn.toBase58(e),n=Y(t),r=(0,xt.blake2b)(Uint8Array.from(n),void 0,32);return a1.toBase58(r)}function u1({common:e,body:t}){let{tag:n,...r}=t,i={...e,feeToken:1n};switch(n){case"Payment":let o={...r,tokenId:1n};return{common:i,body:{type:n,value:o}};case"StakeDelegation":let{source:l,receiver:a}=r;return{common:i,body:{type:n,value:{type:"SetDelegate",value:{delegator:l,newDelegate:a}}}}}}var _=e=>G(e,1),ge=_(_(fe)),Pn=_(_(O({fee:_(ge),feeToken:_(ge),feePayer:w,nonce:ge,validUntil:ge,memo:_(et)},["fee","feeToken","feePayer","nonce","validUntil","memo"]))),On=_(_(O({source:w,receiver:w,tokenId:ge,amount:_(ge)},["source","receiver","tokenId","amount"]))),Rn=O({delegator:w,newDelegate:w},["delegator","newDelegate"]),_n=_(ve([{type:"SetDelegate",value:Rn}])),Mn=_(ve([{type:"Payment",value:On},{type:"StakeDelegation",value:_n}])),Jn=_(O({common:Pn,body:Mn},["common","body"])),Kn=Pe(_(_(O({payload:Jn,signer:_(w),signature:_(O({r:_(F),s:U},["r","s"]))},["payload","signer","signature"]))),J.signedCommandV1);function p1(e){return Ln(F,e.x,!!e.isOdd)}function zn(e){let t=e.length/2,n=e.slice(0,t),r=e.slice(t);return{r:c1(F,n)[0],s:c1(U,r)[0]}}function Ln(e,t,n=!1){let r=e.toBytes(t);return r[r.length-1]&=Number(n)<<7,r.map(i=>i.toString(16).split("").reverse().join("")).join("")}function c1(e,t){let n=[];for(let i=0;i<t.length;i+=2){let o=parseInt(t[i+1]+t[i],16);n.push(o)}let r=!!(n[n.length-1]>>7);return n[n.length-1]&=127,[e.fromBytes(n),r]}function f1({signature:e,payment:t,stake_delegation:n}){let r=zn(e),i=V.toBase58(r),[o,l]=(()=>{if(t!==null&&n===null){let u=t;return[{receiver:u.to,source:u.from,kind:"Payment",fee_payer:u.from,fee_token:u.token,fee:u.fee,amount:u.amount,valid_until:u.valid_until,memo:u.memo},u.nonce]}else if(t===null&&n!==null){let u=n;return[{receiver:u.new_delegate,source:u.delegator,kind:"Delegation",fee_payer:u.delegator,fee_token:"1",fee:u.fee,amount:null,valid_until:u.valid_until,memo:u.memo},u.nonce]}else throw Error("rosettaTransactionToSignedCommand: Unsupported transaction")})(),a=(()=>{let u=o.fee_payer,m=o.source,y=o.receiver,S=z.toBase58(z.fromString(o.memo??"")),k={fee:o.fee,fee_payer_pk:u,nonce:l,valid_until:o.valid_until,memo:S};if(o.kind==="Payment")return{common:k,body:["Payment",{source_pk:m,receiver_pk:y,amount:o.amount}]};if(o.kind==="Delegation")return{common:k,body:["Stake_delegation",["Set_delegate",{delegator:m,new_delegate:y}]]};throw Error("rosettaTransactionToSignedCommand has a bug")})();return{signature:i,signer:a.common.fee_payer_pk,payload:a}}var d1="4294967295",y1=class{constructor(t){if(!t?.network)throw Error("Invalid Specified Network");let n=t.network.toLowerCase();if(n!=="mainnet"&&n!=="testnet")throw Error("Invalid Specified Network");this.network=n}genKeys(){let t=X.random(),n=X.toPublicKey(t);return{privateKey:X.toBase58(t),publicKey:w.toBase58(n)}}verifyKeypair({privateKey:t,publicKey:n}){let r=X.toPublicKey(X.fromBase58(t)),i=w.fromBase58(n);if(r.x!==i.x||r.isOdd!==i.isOdd)throw Error("Public key not derivable from private key");let o=pe.toJSON(pe.emptyValue());o.feePayer.body.publicKey=n,o.memo=z.toBase58(z.emptyValue());let l=kt(o,t,this.network);if(!J0(l,n,this.network))throw Error("Could not sign a transaction with private key");return!0}derivePublicKey(t){let n=X.fromBase58(t),r=X.toPublicKey(n);return w.toBase58(r)}signMessage(t,n){return{signature:{...Q0(t,n.privateKey,this.network),signer:n.publicKey},data:{publicKey:n.publicKey,message:t}}}verifyMessage(t){return e1(t.data.message,t.signature,t.data.publicKey,this.network)}normalizeCommon(t){return{to:t.to,from:t.from,fee:String(t.fee),nonce:String(t.nonce),memo:t.memo??"",validUntil:String(t.validUntil??d1)}}signPayment(t,n){let{fee:r,to:i,from:o,nonce:l,validUntil:a,memo:u}=this.normalizeCommon(t),m=String(t.amount);return{signature:{...V0({common:{fee:r,feePayer:o,nonce:l,validUntil:a,memo:u},body:{source:o,receiver:i,amount:m}},n,this.network),signer:o},data:{to:i,from:o,fee:r,amount:m,nonce:l,memo:u,validUntil:a}}}verifyPayment({data:t,signature:n}){let{fee:r,to:i,from:o,nonce:l,validUntil:a,memo:u}=this.normalizeCommon(t),m=String(t.amount);return Z0({common:{fee:r,feePayer:o,nonce:l,validUntil:a,memo:u},body:{source:o,receiver:i,amount:m}},n,n.signer,this.network)}signStakeDelegation(t,n){let{fee:r,to:i,from:o,nonce:l,validUntil:a,memo:u}=this.normalizeCommon(t);return{signature:{...D0({common:{fee:r,feePayer:o,nonce:l,validUntil:a,memo:u},body:{newDelegate:i,delegator:o}},n,this.network),signer:o},data:{to:i,from:o,fee:r,nonce:l,memo:u,validUntil:a}}}verifyStakeDelegation({data:t,signature:n}){let{fee:r,to:i,from:o,nonce:l,validUntil:a,memo:u}=this.normalizeCommon(t);return W0({common:{fee:r,feePayer:o,nonce:l,validUntil:a,memo:u},body:{newDelegate:i,delegator:o}},n,n.signer,this.network)}hashPayment({data:t,signature:n},r){let{fee:i,to:o,from:l,nonce:a,validUntil:u,memo:m}=this.normalizeCommon(t),y=String(t.amount);return r1({signature:n,data:{common:{fee:i,feePayer:l,nonce:a,validUntil:u,memo:m},body:{source:l,receiver:o,amount:y}}},r)}hashStakeDelegation({data:t,signature:n},r){let{fee:i,to:o,from:l,nonce:a,validUntil:u,memo:m}=this.normalizeCommon(t);return o1({signature:n,data:{common:{fee:i,feePayer:l,nonce:a,validUntil:u,memo:m},body:{newDelegate:o,delegator:l}}},r)}signZkappCommand({feePayer:t,zkappCommand:n},r){let i=n.accountUpdates,o=this.getAccountUpdateMinimumFee(i),l=Number(t.fee);if(Number.isNaN(l)||l<o)throw Error(`Fee must be greater than ${o}`);let a=t.feePayer,u=String(l),m=String(t.nonce),y=String(t.validUntil??d1),S=z.toBase58(z.fromString(t.memo??"")),h=kt({feePayer:{body:{publicKey:a,fee:u,nonce:m,validUntil:y},authorization:""},accountUpdates:i,memo:S},r,this.network);return{signature:{...V.toJSON(V.fromBase58(h.feePayer.authorization)),signer:a},data:{zkappCommand:h,feePayer:{feePayer:a,fee:u,nonce:m,memo:S,validUntil:y}}}}signedRosettaTransactionToSignedCommand(t){let n=JSON.parse(t),r=f1(n);return JSON.stringify({data:r})}publicKeyToRaw(t){let n=w.fromBase58(t);return p1(n)}signTransaction(t,n){if(Gt(t))return this.signMessage(t.message,{publicKey:t.publicKey,privateKey:n});if(Zt(t))return this.signPayment(t,n);if(Wt(t))return this.signStakeDelegation(t,n);if(Xt(t))return this.signZkappCommand(t,n);throw new Error(`Expected signable payload, got '${t}'.`)}getAccountUpdateMinimumFee(t,n=.001){return t.reduce((r,i)=>r+n,0)}};export{y1 as default};
/*! Bundled license information:

js-sha256/src/sha256.js:
  (**
   * [js-sha256]{@link https://github.com/emn178/js-sha256}
   *
   * @version 0.9.0
   * @author Chen, Yi-Cyuan [emn178@gmail.com]
   * @copyright Chen, Yi-Cyuan 2014-2017
   * @license MIT
   *)
*/
